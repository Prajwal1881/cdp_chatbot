URL: https://docs.mparticle.com/
mParticle is a customer data platform (CDP) that simplifies how you collect and connect your user data to hundreds of vendors without needing to manage multiple integrations. We simplify the entire process for you, so you can do more with your data without the hassle of complex integrations.
New to mParticle? Explore our UI with our interactive demo.
Get Started
1. Collect
Send your first event to mParticle
2. Validate
Ensure data quality
3. Connect
Forward data to a downstream services
Do more with mParticle
Manage user identities with IDSync
View and enforce your data quality
Engage customer cohorts
Transform data as it enters and leaves mParticle
Get a complete view of your users
Ensure compliance with GDPR, CCPA, and your privacy policies
Send events directly to mParticle
Real-time API to drive user personalization
Build your own custom integrations
Inputs
Android
iOS
Web
HTTP
Node
Python
Ruby
JSON Reference
Branch
AppsFlyer
Braze
Custom CSV Feed
Outputs
Mixpanel
Amplitude
Facebook
Braze
AppsFlyer
Facebook
Snapchat
Twitter
Braze
Pinterest

URL: https://docs.mparticle.com/guides/getting-started/create-an-input
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Create an Input
Introduction
The purpose of this guide is to walk you through the basic steps of setting up mParticle in your app, unlocking core functionality, and troubleshooting common issues. Along the way, youâll cover some important concepts you need to understand to be successful with mParticle.
This is not a complete guide to all of mParticleâs features and capabilities. If you already know your way around mParticle and youâre looking for in-depth docs, head to ourDevelopersorGuidessections.
Examples
The tutorials in this guide follow the process of setting up mParticle in the mPTravel app: a mobile and web app that sells luxury travel packages to its users.
Later on in this guide, youâll learn about sending data from mParticle to some of our many integration partners. As examples, the tutorials use services which are simple to set up and verify, and which offer a free account tier, so that you will be able follow the examples exactly if you wish. However, mParticle is agnostic about which integrations you choose and you can follow the same basic steps from this guide to implement any of our integrations.
Inputs and Outputs
One of the key functions of mParticle is to receive your data from wherever it originates, and send it wherever it needs to go. The sources of your data are inputs and the service or app where it is forwarded are outputs. A connection is a combination of an input and output.
Inputs include:Apps or services built on any platform we support, such as iOS, Android, or Web. You can view the full list inSETUP > Inputsin the PLATFORMS tab.Data feeds of any other data you want to send into mParticle. This could be data you have collected yourself or from a feed partner. Once configured, feed inputs are listed inSETUP > Inputson the FEEDS tab.
Inputs include:
Apps or services built on any platform we support, such as iOS, Android, or Web. You can view the full list inSETUP > Inputsin the PLATFORMS tab.
Data feeds of any other data you want to send into mParticle. This could be data you have collected yourself or from a feed partner. Once configured, feed inputs are listed inSETUP > Inputson the FEEDS tab.
Outputs may be configured for events, audiences, cookie syncs, or data subject requests depending on what the output supports. You can see the list of configured outputs inSETUP > OutputsorSETUP > Data Warehouses. Outputs include:
Analytics partners such as Indicative
Advertising partners such as Facebook
In-app messaging partners such as Braze
Data Warehouse partners, such as Amazon Redshift, Google BigQuery, or Snowflake
To get started with mParticle, you need some data, which means you need to create at least one input.
Create Access Credentials
The first thing you need to do is to to create a set of access credentials that will allow a client-side SDK or a server-side application to forward data to this workspace.
Login to your mParticle account. If youâre just getting started, your first workspace is created for you. The first screen you see is an overview of activity in the workspace. Since you havenât yet sent any data, thereâs nothing to report, so far.
Navigate toSetup > Inputsin the left column. Here you can see each platform type accepted by mParticle. Different platforms are associated with different sets of metadata, such as device identifiers, and most outputs only accept data from a limited set of platforms, so it is important to select the right platform. To capture data from your native Android app, chooseAndroid. Just click the+next to your chosen platform.
ClickIssue Keys.
Copy and save the generated Key and Secret.
About Access Credentials
mParticle labels the credentials you create for an integration the key and secret, but they are not exactly like an API key and secret, since you embed these credentials in the app. However, this is not the security risk that exposing API credentials would be:
The client-side key and secret canât read data from the system.
You canblock bad datato stop any traffic that doesnât match the data you expect as defined in your schema.
Most anonymous client-server architectures, including Adobe, Braze, Firebase, Google Analytics, and Segment donât have per-session or per-instance credentials, nor does mParticle.
Install and Initialize an mParticle SDK
You need a developer to help you install and initialize an SDK. See the Getting Started guides for theiOS,AndroidorJavascriptSDKs to get set up before continuing.
Verify: Look for Incoming Data in the Live Stream
Navigate toActivity > Live Streamin the left column. The Live Stream lets you inspect all incoming data from your development environments. Itâs an easy way to check that you have correctly initialized mParticle in your app. When you first open up the Live Stream, it will be empty, as we havenât yet started sending data.
Start up a development build of your app (get a developer to help you if necessary). The mParticle SDKs automatically collect and forward data about installs and user sessions, so just by opening a development build of your app, you should start to see data in the Live Stream.
Advanced Platform Configuration Settings
For the iOS, Android, tvOS, and Web platforms, some advanced configuration settings are available. To change these settings, navigate toSetup > Inputsin the left column and select either iOS, Android, tvOS, or Web from the list of platforms.
Expand theAdvanced Settingsby clicking the + icon.
Restrict Device ID by Limit Ad Tracking
iOS, Android, and tvOS (Apple TV) devices allow users to limit the collection of advertising IDs. Advertising IDs are unique identifiers you may use to associate event and user data with a specific device. For both iOS and Android devices, if a user has not provided explicit consent to share their deviceâs advertising ID, then the value of that ID is set to an all-zero value.
By checkingRestrict Device ID by Limit Ad Tracking, mParticle will not collect advertising IDs from users who have enabled the Limit Ad Tracking setting on their device.
Remember, mParticle will collect advertising IDs for both iOS and Android devices, regardless of whether or not a user has enabled the Limit Ad Tracking setting on their device. However, the IDs collected from users who have opted out will be all-zero values.
Following are descriptions of Apple and Googleâs policies for device advertising IDs:
iOS Advertising IDs
After the release of iOS 14.5, Apple introduced the App Tracking Transparency (ATT) framework, which requires app developers to request usersâ explicit consent to share their advertising IDs. If a user of your app has not provided this consent, Appleâs advertising ID (IDFA) will be set to all an all-zero value:00000000-0000-0000-0000-000000000000. Read more about Apple advertising identifiersin their documentation.
For more information about the ATT framework, visit theiOS 14 Guide.
Android Advertising IDs
Google allows Android users to opt out from sharing their devicesâ advertising IDs. Similar to Appleâs policy, Google will set a userâs advertising ID (GAID or AAID) to an all-zero value if that user has opted out from sharing their ID. Read more about Googleâs advertising identifiers intheir documentation.
Collect Integration-Specific Identifiers
The Web SDK can collect integration-specific identifiers to enrich the user data forwarded to your connected outputs.
WhenCollect Integration-Specific Identifiersis checked, these integration-specific identifiers are collected and used to enrich your user data to help optimize the match rate of your audiences in downstream tools. Currently, these identifiers include Facebookâsfbcandfbpfields.
Supported Integrations
Troubleshoot
If you donât see data appearing in the Live Stream within the first few minutes after opening a development build:
Check that you have copied your Key and Secret correctly
Check that you have properly included the mParticle SDK in your project and it is correctly initialized. The necessary steps will differ depending on the platform. Check ouriOS,AndroidandWebdocs for more.
Next Steps
Congratulations, you have created a working data input. Now itâs time tostart capturing some data.
Was this page helpful?

URL: https://docs.mparticle.com/guides/getting-started/start-capturing-data/#verify-look-for-incoming-data-in-the-live-stream
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Start capturing data
After you create an input, you can begin capturing data.
Prerequisites
Before you start this activity, you should have already:
Created an input.
Data in mParticle
mParticle collects two important kinds of data:
Event data
Event data is about actions taken by a user in your app. Some events are collected automatically by mParticleâs native SDKs. These include the Session Start events you saw in the Live stream when you firstset up your input. Other events need to be captured by writing code in your app. Of these, the most significant are:
Screen/Page Views- keep track of where a user is in your app
Custom Events- track any actions the user might take in your app, such as clicking a button or watching a video.
Commerce Events- track purchases and other product-related activity.
User data
mParticle also captures data about your user, including their identities, information about the device they are using and any custom attributes you set. As with event data, some user data, such as information about the devices they use, is captured automatically by mParticleâs native SDKs. Two important types of user data must be captured by writing code in your app:
User identitiesare unique identifiers for your user, like an email address or customer ID. These are different from the device identities collected automatically by the SDKs, which donât identify an individual person but a particular cell phone, browser session, or some other device.User identities help mParticle keep track of unique users of your app and allow you to track a userâs activity over time and across different devices. To learn a lot more about user and device identities, read ourIDSyncguide. For now, you just need to know that a user identity is a way of identifying aperson, independently of thedevicethey are currently using.
User Attributesare key-value pairs that can store any custom data about your user. The value of a user attribute can be:A stringA numberA listA boolean value (trueorfalse)null- attributes with anullvalue function as âtagsâ, and can be used to sort your users into categories.
User Attributesare key-value pairs that can store any custom data about your user. The value of a user attribute can be:
A string
A number
A list
A boolean value (trueorfalse)
null- attributes with anullvalue function as âtagsâ, and can be used to sort your users into categories.
Capture User and Event Data
To start capturing data you will need to go back to your app code. Inthe previous stepyou should have installed and initialized the mParticle SDK in at least one of your app platforms. This means youâre already set up to capture Session Start and Session End events, as well as basic data about the device. Grab a friendly developer again, if you need one, and try to add some additional user and event data to your implementation. Here are a few things you might try, with links to the appropriate developer docs:
Add a Customer ID or Email Address for a user.Android/iOS/Web
Create a custom user attribute that tells you something about a user. For example:status: "premium".Android/iOS/Web
Create a page or screen view event that captures the name of a page or screen being viewed.Android/iOS/Web
Create a custom event to track a user action in your app. Include some custom attributes. For example, the mPTravel app sends a custom event when a user views one of its content videos. The event is called âPlay Videoâ and it has two custom attributes: thecategoryof content, and the traveldestinationthe video promotes. Later on, youâll see how events like these can be used to target custom messaging.Android/iOS/Web
Create a purchase event - track a purchase using mParticleâs commerce APIs.Android/iOS/Web
Verify: Look for incoming data in the Live Stream
Once youâve added code to your app to start collecting some basic data, start up a development build of your app again and trigger some events. Have another look at the Live Stream. You should start to see new event batches, with the individual events you have added to your app.

Troubleshoot
If you have at least some data in your Live Stream, such as the session start and session end messages generated in theprevious step, but your screen views, custom events or purchases arenât showing, itâs likely that there is an issue with your app code.
Check that your code is correctly formed, and that the methods which send events to mParticle are actually triggered by user activity in your app.
Review your development environmentâs logs. These will show when an event is sent to mParticle.
Next steps
Excellent, youâve started collecting real custom datapoints from your app. At this point you might want to take a quick break to:
Explore the capabilities of theLive Stream
Learn more about theimportance of user identitiesin mParticle.
Now that youâre collecting data, itâs time to send it on byconnecting an event output.
Was this page helpful?

URL: https://docs.mparticle.com/guides/getting-started/connect-an-event-output
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Connect an Event Output
To learn more about event outputs before creating your first one, view the following video:

Prerequisites
Before you start this activity, you should have already:
Created an input
Started to capture some basic data points
Outputs
Outputs are mParticleâs term for the services where we forward your data. Outputs are also referred to as âintegrationsâ. Outputs come in two types: âeventâ, and âaudienceâ. Audiences are covered in thenext part of this guide. This section will show you how to set up an event output.
Example - Connect an Output to Analytics
mParticle has over a hundred event outputs, and the connection process for each is similar. This tutorial creates a connection to Analytics as an example. You can follow the same steps with a different output, or create afree Analytics accountto follow along exactly.
Find Analytics in the Directory
ClickDirectoryin the sidebar, and search for Analytics.
Click the Analytics tile to display Output: Event Configuration.
Enter the configuration information:Enter a configuration name.Leave the box checked to use the same settings for Development & Production.Select a field as the user identity field. Leave the default if youâre not sure what to choose.Enter the Analytics API key which you can find in the Analytics project settings.
Enter the configuration information:
Enter a configuration name.
Leave the box checked to use the same settings for Development & Production.
Select a field as the user identity field. Leave the default if youâre not sure what to choose.
Enter the Analytics API key which you can find in the Analytics project settings.
Remember to save your new output configuration.
Create the Connection
Now that you have both an input and an output set up, itâs time to connect them:
ClickConnections > Connect, and select the input youâve already set up.
ClickConnect Output.
Select your Analytics configuration.
Complete the Connection Settings, different for each output. For Analytics you can leave the default selections.
Set the status toActiveand clickSave.
Verify: Check that data is arriving in Analytics
Once you have enabled the connection, open up the development build of your app again and create a few more events. Each output service displays the data it receives differently. For Analytics, you can view real-time data in theDebug Console.
Troubleshoot
If you donât see data arriving in the output service, navigate toData Master > Live Streamand select Message Direction Outbound.
If you see messages in the outbound Live Stream, but none in the output service:You may just need to wait. For most event outputs, mParticle forwards information in close to real time. However, there are factors which can slow down processing and the amount of time it takes for data to become visible in an output serviceâs dashboard can be different for each service.Navigate toActivity > System Alertsand see if there are any errors noted for the output you want to troubleshoot. The error type may give you a clue as to what is wrong.
If you see messages in the outbound Live Stream, but none in the output service:
You may just need to wait. For most event outputs, mParticle forwards information in close to real time. However, there are factors which can slow down processing and the amount of time it takes for data to become visible in an output serviceâs dashboard can be different for each service.
Navigate toActivity > System Alertsand see if there are any errors noted for the output you want to troubleshoot. The error type may give you a clue as to what is wrong.
If the previous step doesnât resolve the issue:Check all of your Configuration and Connection settings. Make sure that all settings are correct, especially any access credentials, such as Project or App IDs, API Key & Secret, etc.It is common for a particular output service to require certain identifiers or other data points to be present to allow data to be forwarded. As an example, the Google Ads output requires information about a userâs device, including the Device Advertising ID, in order to construct a User Agent Header. If the Device Advertising ID is not present, no data can be sent. Check thedocsfor the output service and make sure youâre sending all the required information.
If the previous step doesnât resolve the issue:
Check all of your Configuration and Connection settings. Make sure that all settings are correct, especially any access credentials, such as Project or App IDs, API Key & Secret, etc.
It is common for a particular output service to require certain identifiers or other data points to be present to allow data to be forwarded. As an example, the Google Ads output requires information about a userâs device, including the Device Advertising ID, in order to construct a User Agent Header. If the Device Advertising ID is not present, no data can be sent. Check thedocsfor the output service and make sure youâre sending all the required information.
If there are no outgoing messages in the Live Stream, then mParticle is not attempting to send any data to the output service. Some possible reasons for this include:
Not all outputs support every platform or accept every event type. The Directory shows a list of available platforms and supported event types for each output. Make sure the data you are trying to send is supported.
mParticle allows you to filter your data for each output. Check theData Filterto make sure you havenât turned off the data points youâre trying to send.
Next steps
By now you should be successfully forwarding data to at least one event output. Some additional resources you might want to look at include:
One of the key benefits of mParticle is the power to collect data once and forward it to as many output services as you wish. Browse theIntegrationssection of our docs to learn more about the different services mParticle can forward your data to.
Most event outputs work by forwarding data server-side via the output partnerâs HTTP API. However, some outputs require extra client-side code to be added to your native app, to allow data to be sent directly from your app to the output service. These integrations are called âembedded kitsâ. You can read more about them in theiOSandAndroiddocumentation.
Sending web data to an output usually works a little differently from native. If youâre using mParticle on the web, read our guide toWorking with Web Data.
Next up, you will learn about the second category of mParticle data bycreating an audience.
Was this page helpful?

URL: https://docs.mparticle.com/guides/idsync/introduction
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
IDSync Overview
IDSync is the mParticle identity framework, enabling you to create a unified view of your customers, with improved data governance, policy, and security.
IDSync gives visibility into, and control over, the management of known and anonymous user identities across apps and platforms. It allows marketers to accurately identify customers in key moments of their journey in order to support robust targeting and personalization, and to deliver consistent user experiences across all devices, touchpoints, and channels.
Was this page helpful?

URL: https://docs.mparticle.com/guides/data-master/introduction
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Introduction
Data Master allows you to standardize and validate customer data before it gets shared across systems, applications and teams. It encompasses the following features:
Catalogprovides an overview of data collected, including detailed collection statistics. You can add descriptions and other information about data points in the catalog.
Data Plansallow you to define and then validate the extent and shape of the data that is collected.
Live Streamallows you to observe data streaming into mParticle in realtime and to identify violations quickly if you are using a Data Plan to validate your data.
Understanding Data Points and Data Plans
For every mParticle workspace, you may have many data plans.
Every data plan contains one or more data plan versions.
Each data plan version contains data points that you have defined.

A data point is a unit of data collected by mParticle. Data points represent Events such as Custom Events or Screen Views, or User attributes such as Customer Id or Email.
Each data point includes criteria used to select the data point from an incoming data stream, and a definition called a schema that validates the contents of the data point. You can view data points in all three Data Master tools: Catalog, Live Stream, and Data Plan.
For example, here is a view of the Play Video data point in Catalog:

Here is a view of the a Commerce Event data point in Live Stream:

This view of a data point is from Data Plan:

Was this page helpful?

URL: https://docs.mparticle.com/guides/personalization/audiences/overview
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Audiences Overview
mParticle allows you to define sophisticated, intelligent segments and deliver personalized experiences using both rules-based and predictive capabilities. Our machine learning engine analyzes user behavior patterns to help you identify and reach users most likely to take desired actions.
You can define audiences using any user-associated data captured with mParticle, whether from platform inputs or partner feeds, and enhance them with predictive insights.
When you fully instrument your app using the mParticle SDK, you send data from apps to the mParticle platform. This data feeds both traditional segmentation and our predictive models. You can also enrich that data stream with other sources like CRM data or purchase data from other channels. Comprehensive data capture improves both immediate segmentation and predictive accuracy.
Examples
Use audiences to create sophisticated segments powered by both rules and machine learning.
Drive User Engagement Through Intelligent Segmentation
Letâs say you want to target users who installed your app to increase their engagement. There are two approaches to accomplishing this using Audiences:
Rules-based:Taking this strategy, you would use audience criteria to build a customer segment that aligns with your target characteristics, like users who installed your app in the last 72 hours with fewer than three sessions.
AI-powered:Using a predictive approach, you could simply define your business goal, then let Predictive Attributes to perform a comprehensive analysis of user data to predict which new users are most likely to take the engagement action you have defined. Once the Predictive Attribute has been generated, you could use it as an audience criteria to select users who are statistically most likely to engage with your app.
No matter which approach you take, you can easily forward your audience to push notification and email partners.  Once these audience connections are established, mParticle instantiates a corresponding audiences both partners.  No coding is necessary.
Drive app downloads
Letâs say you want to find more users like your currently highly engaged users and run an app download campaign in Facebook against that target audience. You start by defining your highly engaged users, using whatever criteria is important to you: lifetime value metrics, session activity, event activity, or any other data points you capture.
Once your audience is defined, configure the Facebook integration and corresponding custom audiences in your Facebook account.  From there you can leverage the custom audiences like any other custom audience in Facebook.
Because we want to target users that look like our highly engaged users, we will create a Facebook lookalike audience from our highly engaged user audience and run a Facebook app install campaign that targets that lookalike audience.
Was this page helpful?

URL: https://docs.mparticle.com/guides/platform-guide/rules
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Rules
Rules allow you to cleanse, enrich and transform your incoming and outgoing data. A rule is a script which accepts an incoming mParticle Events API âbatchâ object and modifies it according to your business logic. Some example use-cases for a rule are:
Modify a batchâs data
Drop a batch
Modify an eventâs data
Drop an event from a batch
Add events to a batch
Rule execution
Each of your Inputs, such as for your web, mobile, or server-to-server data, has an individually configured data pipeline, and each Inputâs pipeline contains the same key stages. Rules are therefore applied for a specific Inputâs pipeline, and itâs up to you choose where in that Inputâs pipeline each Rule is executed. A single Input pipeline may contain multiple Rules each stage.
mParticle pipeline stages
Stage 1 - Input
Data is received by mParticle for a specific Input (such as Web, iOS, or a custom server feed).
Stage 2 - Storage and Processing
The Inputâs data is stored and processed by mParticle, including:
mParticleâs profile system, which stores user data and enriches the Inputâs data based on the existing profile of that user.
mParticle Data Master tool
Stage 3 - Output
The Inputâs data is sent individually to the mParticle Audience system and 300+ partner integrations. In this stage the pipeline actually branches out with a single Input potentially being connected to many Outputs.
Rule application
Rules are applied to a specific Inputâs pipeline. There are two places in the pipeline where rules can be applied:
In between Stage 1 and Stage 2
Rules executed between Stage 1 and Stage 2 affect the data sent to both Stage 2 and then Stage 3, including the mParticle profile store, audience store, and all outputs. These are labeled âAll Outputâ Rules in your mParticle dashboard.
In between Stage 2 and Stage 3
You can also apply a rule right before itâs sent to aspecificOutput. This lets you mutate data to handle specific requirements or mappings that need to occur for a given partner integration.
Rule requirements
All rules accept an mParticle Events API batch object and can return a modified or null batch object.
There are some differences in error handling and available fields depending on pipeline location. SeeRules Developer Guidefor details.
A 200ms timeout applies to all rules. You can choose if a batch should be dropped or continue unprocessed by the rules in the case of a timeout.
Rules are executed on the server and only act on data forwarded downstream server-to-server. A warning is shown in the dashboard if you set up one of the following rules:A rule for integrations that forwards data client-side via a kit.A rule for hybrid integrations that support forwarding via client-side and server-to-server.
Rules are executed on the server and only act on data forwarded downstream server-to-server. A warning is shown in the dashboard if you set up one of the following rules:
A rule for integrations that forwards data client-side via a kit.
A rule for hybrid integrations that support forwarding via client-side and server-to-server.
If you are using a rule to modify user identities or user attributes, you must include a âUser Identity Change Eventâ (user_identity_change) or a âUser Attribute Change Eventâ (user_attribute_change). SeeRules Developer Guidefor an example ofuser_attribute_changein a rule.
Create a function in AWS
mParticle rules are hosted in your AWS account as Lambda functions. To do this, you need to be able to provide an Amazon Resource Number (ARN) for your rule. See theAWS Lambda documentationfor help creating a function.  The Lambda functions used for rules must be hosted in the same AWS region as yourmParticle account.
The name of the function must begin with âmprâ
Your development rule must have an alias of â$LATESTâ
Your production rule must have an alias of âPRODâ
Your ARNs should look something like this:
arn:aws:lambda:us-east-1:999999999999:function:mprmylambdafunction:PROD
arn:aws:lambda:us-east-1:999999999999:function:mprmylambdafunction:$LATEST
IAM user
To connect to your AWS Lambda function, you must provide the AWS Access Key ID and Secret Access Key for anIAM user.
In the IAM dashboard, add the following permissions policy for the user:
IAM role
You will also need to create a role in IAM. Assign this role the same policy document created above.

Assign this role to each Lambda function you plan to deploy as an mParticle rule.

Creating a rule in the dashboard
Create a rule by navigating toData Master > Rules
ClickNew Rule.

Enter your Development and Production ARNs and clickTest.

Error handling
When you first test a rule, you must select aFailure Action. This determines what happens if your rule throws an unhandled exception. There is no default action, you must select one of the following:
If you chooseDiscard, an unhandled exception causes your rule returnnull, effectively dropping the batch.
If you chooseProceed, an unhandled exception causes your rule to return the unaltered batch object, proceeding as if the rule had not been applied.
Regardless of which option you choose, itâs best practice to handle all exceptions in your code, rather than falling back on the above defaults. This is especially true if your rule deals with events, where an unhandled exception from just one event could lead to all events in the batch being dropped.
Javascript syntax
Your code must be a validLambda function.
batchis the complete incoming batch object.
contextis a required argument for Lambda functions, but is effectivelynullfor mParticle rules.
Testing rules
The first time you test a rule, you are asked to provide a name, description and failure action. After naming a rule, you can test it by using one of the sample templates provided in the Test rule dialog. You can also copy and paste batch JSON from your Live Stream. If you do this, be sure to pick a full batch to copy, not a single event.  ClickTestto run. Optionally, check a box to save your JSON template in local storage for future testing.
You must enter validbatchJSON in the code editor.
If there are any syntactical errors in your code, warning or error icons will display next to the line number with details of the problem so you can correct.
After clickingTest, you can examine the JSON output from your function to see that the input has been modified as expected.
After a successful test you can clickSaveto save the Rule. Due to recent updates in AWS Lambda, it may be necessary to wait one minute after a successful test in order to save the Rule.
If your test fails, try examining thelogsfor any console output.
Versioning
When you first create a rule, by default it will only be applied toDEVdata. As well as testing a rule with sample JSON you should test the rule in your dev environment to make sure data reaching your output services is as expected. When you are ready to apply a rule to your production data, clickPromote to Prodon the rule page. This will create a âv1â production rule.
Note that before a rule can be promoted to Prod, you must remove allconsole.log()statements.
If you need to make changes, choose$LATESTfrom theVersiondropdown. All other versions are read only. Test your changes with your dev environment and, when you are ready, clickPromote to Prodto create âv2â of your production rule.
Note that you can have a maximum of 50 versions per rule. If you have too many versions, select a version and click the trash can icon to the right of the version number to delete it.
Status
Each rule has a master switch in the Settings panel. If there is a problem with your rule, you can switch it off and it will be disabled for all connections until you enable it again. To disable, clickEditin the right sidebar and set theStatusslider toinactive.
Metrics
The following metrics are available:
Invocations- how many times the rule was invoked
Throttles- how many times a 429 throttling response was returned when calling the rule
Errors- how many errors have occurred when calling the rule
These metrics are for the last 24 hours and apply to all connections. Summaries for each rule can be seen on the main rules page. Detailed graph of the previous 24 hours is available on theMonitoringtab of the individual rule page.

Logs
To help you with troubleshooting rules, mParticle maintains logs for each rule where you can view all console output. From an individual rule page, select theLogstab. You can filter messages by date range or search for keywords.

Deleting rules
From the rules listing, select theDeleteaction to delete the rule. If the rule is applied to any connections, it will be removed from those connections.
Was this page helpful?

URL: https://docs.mparticle.com/guides/platform-guide/activity/#user-activity
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Activity
The Activity section of the mParticle platform allows you to view information about your event data.
The following video provides an overview of the Activity dashboard:

Overview
The Activity Overview tracks basic stats for your workspace:

All metrics can be filtered by date range, environment and input.
Identity

Displays summary metrics for identity data collected about your users:
% of Users: The percentage of users that have a given identity type.
Overlaps: The percentage of users and count that have a combination of the two given identity types.
This section is filterable by the date range, environment and input options at the top of the page.
Connections

Displays summary information representing the current workspaceâs usage, showing the following metrics:
Inputs
Active Platforms: Count of platforms configured with credentials.
Active Feeds: Count of configured inbound feeds.
Custom Events: Count of custom events received.
User Attributes: Count of user attributes received.
Outputs
Active Event Integrations: Count of active event configurations.
Active Audience Integrations: Count of active audience configurations.
Active Real-time Audiences: Count of active real-time audiences.
Standard Audiences: Count of âreadyâ Standard Audiences.
User Activity
The User Activity view allows you to see a detailed summary of data associated with a single user. Note that only users with the Admin or Support roles can access the User Activity view.
To find a user, begin entering any known ID for the user, an email address, customer ID, device ID, etc. The ID must match exactly to return a profile. If multiple profiles are returned, select the user you want from the list.
User Search
You can search for any element in your Identity Set.
To perform a search do the following:
Navigate to theActivity>User Activityscreen. The User Search dialog displays on the screen.

Enter the search terms in the search field.You can narrow your search by clicking the Any Profile field drop-down and selecting any field that is part of your Identity Set.
Enter the search terms in the search field.
You can narrow your search by clicking the Any Profile field drop-down and selecting any field that is part of your Identity Set.
You can search for users that belong to agroup identityby searching for the group identifier or group attribute for the group.
You can search for users that belong to agroup identityby searching for the group identifier or group attribute for the group.
Click the Search button. The screen refreshes and search results are displayed in the Information screen.
View individual results by clicking a row. From the individual results you can do the following:
Submit a New GDPR Request. For more information about GDPR requests, seeSubject Requests
View User Events by clicking theEventstab or by scrolling to the bottom of the screen and clicking theView User Eventsbutton
Expand any of the sections on the Information screen for more information about your results
The information shown on this screen is explained in the following sections.
Information
The following user information will be displayed if available:
User Details
mParticle ID
Customer ID
Email Address
First and last seen dates (across all workspaces)
Workspace Usage
First and last seen dates (for the individual workspace)
Data Inputs and Partner Feeds the user has appeared in.
Device ID - only one Device ID will be shown, for the most recently seen device. The Advertising ID (IDFA or GAID) will be shown for preference, with the Vendor ID (IDFV or Android ID) as a fallback.
Devices
List of all devices, including the date the device was last seen, device platform (iOS, Android, etc) and whetherLimit Ad Trackingis enabled for the device.
User Attributes
List of all available user attributes. Display priority is given to reserved user attributes:
Age
First Name
Last Name
Gender
Mobile Number
Address
City
State
Zip Code
Country
All other user attributes will be displayed in alphabetical order.
User attribute values may be updated by different inbound data streams. For example, a profile may be created, attributes may be added, updated, or deleted. Each change triggers a timestamp change for the altered attribute. When resolving differences in attribute values for the same profile, the value with the latest timestamp is used.
Attribution
A list of campaigns, showing Partner and Campaign name.
Audience Membership
A list of allAudiencesthe user is a member of.
Events
The Events tab will show a timeline of historical event data from the user,up until the previous day. Events can be filtered by Date, Input, Event Type and Device. In addition to filtering, you can also choose to highlight selected event names in the timeline.
Events are grouped in batches, with the input source in bold. Click a batch heading to view common attributes for the batch, or an event name to view attributes for the event. eCommerce events show details for the transaction and also for each product, including quantity and total price per product.

Click the Link button in the details view to copy a sharable direct link to the event to your clipboard.
As with theLive StreamYou can expand any event or batch to view the raw JSON data.

Edit a user profile
The User Activity View allows you to manually edit certain properties of individual user profiles. This can be useful if you need to correct profile data and you want the updated profile data to be immediately forwarded to your downstream connections.
Whenever you modify user profile data, you must select one of your configured inputs. This allows mParticle to route your changes through that input, updating the user profile, before finally forwarding the changes to any active, connected outputs.
Edit a profileâs user attributes
To edit a profileâs user attributes:
Navigate toActivity > User Activityusing the left-hand nav bar.
Find the profile you want to edit by searching for one of the profileâs identifiers under User Search.
On the Information tab for the profile, scroll to the User Attributes section and click theEditpencil icon next to the mParticle workspace where you want to make your changes.Remember that user attributes are scoped at the workspace level, so a profile that exists in multiple workspaces may contain different attributes in each workspace.
On the Information tab for the profile, scroll to the User Attributes section and click theEditpencil icon next to the mParticle workspace where you want to make your changes.
Remember that user attributes are scoped at the workspace level, so a profile that exists in multiple workspaces may contain different attributes in each workspace.

In the Edit modal, select one of your configured and active inputs. The changes you make will be sent to every output that is connected to the input you select. If you donât want your changes sent to your downstream outputs, create or select an input that has no connected outputs.

The Edit modal displays a list of the profileâs attributes and attribute values. To change an attribute value, modify or replace it using the text box to the right of the attributeâs name.

To permanently delete an attribute from a profile, click thedeletetrash icon next to the attribute.

After youâve made your changes, clickUpdate.
Edit a profileâs consent values
Navigate toActivity > User Activityusing the left-hand nav bar.
Find the profile you want to edit by searching for one of the profileâs identifiers under User Search.
On the Information tab for the profile, scroll to the Consent and Compliance section and click theEditpencil icon next to the mParticle workspace where you want to make your changes.Remember that user consent and compliance values are scoped at the workspace level, so a profile that exists in multiple workspaces may contain different values in each workspace.
On the Information tab for the profile, scroll to the Consent and Compliance section and click theEditpencil icon next to the mParticle workspace where you want to make your changes.
Remember that user consent and compliance values are scoped at the workspace level, so a profile that exists in multiple workspaces may contain different values in each workspace.

In the Edit modal, select one of your configured and active inputs. The changes you make will be sent to every output that is connected to the input you select. If you donât want your changes sent to your downstream outputs, create or select an input that has no connected outputs.

The Edit modal lists the profileâs consent purposes (which are not editable) and the corresponding consent values. You can edit a consent value by entering eithertrueorfalsein the text box.

After youâve made your changes, clickUpdate.
Edit a profileâs user identities
Navigate toActivity > User Activityusing the left-hand nav bar.
Find the profile you want to edit by searching for one of the profileâs identifiers under User Search.
On the Information tab for the profile, look for the User Details section and click theEditpencil icon.Remember that user identities values are scoped at the organization level: a userâs identities are consistent between all workspaces in your mParticle organization.
On the Information tab for the profile, look for the User Details section and click theEditpencil icon.
Remember that user identities values are scoped at the organization level: a userâs identities are consistent between all workspaces in your mParticle organization.

In the modal that appears, select one of your configured and active inputs. The changes you make will be sent to every output that is connected to the input you select. If you donât want your changes sent to your downstream outputs, create or select an input that has no connected outputs.

To edit one of the profileâs identities, enter the new value in the text box to the right of the user identity.

To delete an identity from a profile, click thedeletetrash icon.

After youâve made your changes, clickUpdate.
To add an identity to a user profile:
Repeat steps 1-4 ofEdit a profileâs user identities.
ClickAdd Identity.

Use the left dropdown menu to select the type of identity to add, and enter the value of the new identity in the text box on the right.

ClickUpdate.
System Alerts
The System Alerts dashboard reports all errors returned when forwarding data to your connected outputs. This dashboard helps you to find any connections that are failing to forward data, and it can help you to begin debugging a connection you already know is experiencing problems by highlighting the specific errors reported.
System Alerts dashboard
To view system alerts, log into your mParticle account and navigate toActivity > System Alertsin the left nav bar.

The System Alerts dashboard lists all of your connections sorted by their alert volume, from high to low according to alerts reported during the last 12 hours.
You can view alerts reported during different date ranges by using theDatedropdown menu.
To view alerts reported for only the production or development environment, select the environment using theEnvironmentdropdown menu. You can also look for a specific connection with the search bar.
Alert details
To view details on the specific alerts reported for a connection, select it from the list labeledConnections.

The alerts displayed are sorted by volume and organized according to their type. To view the volume of alerts for each input, click the+icon next to the alert type. You can search for a specific alert using the search bar on the System Alerts dashboard.

The following alert types are supported:
Event Forwarding

The Event Forwarding report provides information on your appâs incoming event data and the data that is forwarded to enabled output event services. This is where you can verify how much data mParticle captured per event, and how much data was forwarded.  If multiple configurations are enabled for an integration, the data sent to each configuration will be shown separately. We recommend checking this report if you notice any discrepancies in your vendor dashboards.
The report displays a daily summary of events, plus counts for each message type and event name, along with the inbound and outbound counts for each enabled service.  By default a summary of data for a full day is shown, but you can also select a specific hour to display hourly data.
You may notice differences between an inbound data count and an outbound data count. There are several reasons these differences may occur. Here are some good questions to start with:
Did you enable/disable the service on the date in question?
Are you using data filters?
Is the message type not supported by the integration?
Have you chosen configuration or connection settings that exclude certain message types?
Are you sendingcommerce eventsthat are expanded before being forwarded?
Commerce Event Types and Event Forwarding
Four events, called commerce events, capture information about financial transactions: product commerce events, purchase or refund commerce events, promotion commerce events, and impression commerce events.
Commerce events behave differently from other events:
If the event is forwarded using an mParticle SDK with an embedded kit that doesnât implementlogCommerceEvent, then the event is expanded to ensure that no data is lost.
If the event is forwarded server-to-server or using an mParticle SDK with an embedded kit that does supportlogCommerceEvent, then no expansion is needed, and no data is lost.
In addition, the expansion behavior is different depending on the commerce event type:
Product commerce events and impression commerce events expand to one event per product.
Purchase or refund commerce events add an additional event with the total value.
Promotion commerce events expand to one event per promotion action type such as âclickâ or âview.â
For more details, see theiOS SDKorAndroid SDKdocumentation.
Was this page helpful?

URL: https://docs.mparticle.com/guides/data-privacy-controls
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Data Privacy Controls
Manage your consent and opt-out privacy obligations under the GDPR and CCPA with Data Privacy Controls. This feature is not prescriptive and there is no single way to implement consent or opt-out. Instead, mParticle gives you a simple, standard technique for storing and applying consent and opt-out choices. Consent state powers both GDPR consent and CCPA data sale opt-out.
This guide introduces you to mParticleâs data privacy control functionality and shows you how to collect an individualâs consent and apply it to your data flows.
Common uses of data privacy controls
Data privacy controls are flexible and customizable, allowing you to build any data flow or consent-based logic you need.
Use mParticleâs data privacy controls to help comply with CCPAâs âdo not sell my dataâ requirement by collecting users who opt-out and blocking those usersâ data from flowing to any âdata saleâ output by:
Recording a CCPA data sale opt-out as a user consent (more information below)
Identify which outputs count as âdata saleâ and apply the below forwarding rule to them
Applying a forwarding rule of: Do not forward if CCPA Data sale opt out is present
GDPR defines consent as one method of lawful data processing. One common setup is to:
Define a processing purpose of âmarketingâ
Prompt users for affirmative consent for âmarketingâ
Identify which outputs would perform âanalyticsâ processing
Apply a forwarding rule of: Only forward user data if GDPR Consent for âmarketingâ is true
Data privacy and the mParticle platform
Once enabled and configured, data privacy work with the mParticle platform to ingest and pass on consent state:
Define categories of data collection called consent purposes.
Store the consent state in a userâs profile.
Control data flow based on stored consent.
Send user consent state to your integrations (outputs).

Enabling data privacy controls
Data privacy controls save user consent decisions and applies them to data flows.
Enable GDPR and/or CCPA compliance features on your workspace fromWorkspace Settings>Workspace>Regulation.

For GDPR, create a set of purposes fromPrivacy > Privacy Settingsin the dashboard.
For CCPA, once it is enabled in your workspace, the purposedata_sale_opt_outis automatically created. The SDKs and mParticle UIs facilitate using this purpose, so you donât need to hardcode it anywhere.

Consent properties
The mParticle format for a single record of a user decision on a privacy prompt,.consent, is ourconsent_stateobject. This is used for both GDPR-style opt-in consent and for CCPA-style opt-out.
For each user or workspace, consent state can be stored for each possible combination of regulation and purpose. For each purpose, the following fields are supported.
All fields are optional, exceptconsented,timestamp_unixtime_ms,regulationandpurpose. Theregulationandpurposefields are built into the structure. Be sure to include your privacy and compliance experts when deciding how to implement optional fields.
Example consent state
Consent state can be logged via the HTTP API simply by including a consent state object in a batch, mirroring the structure of the user profile (above):
Collecting consent state
For detailed definitions of how to report consent state, review the sections of our API and SDK references that cover data privacy controls:
Web SDK
iOS SDK
Android SDK
AMP SDK
HTTP API
Additionally, ourintegration with OneTrustallows you to ingest customer consent states into mParticle.
Using consent state
User profiles
Consent state is maintained per person on the User Profile using the structure defined above.
For testing consent, you can useUser Activity Viewto check that a consent was recorded correctly. Here is an example of how CCPA data sale opt-out will appear:

Audiences
Consent state can be used to create conditions in the Audience Builder to check a usersâ consent state as a requirement for audience inclusion or exclusion.
For example, for CCPA you may want to include only users who have NOT opted out of data sale, by adding a criteria like this:

For GDPR, you may want to include only users that have an opt-in consent for a given purpose, shown here as âAdvertisingâ:

Connections and forwarding rules
Consent state can be used to create forwarding rules that selectively filter data based on a users consent state, in real time and per-person.
For example, you can choose to only forward data from users who have given consent for a particular purpose.
For CCPA, you may want a forwarding rule to apply a data sale opt-out. In this example, usersâ who have a consent state oftruefor the CCPA purpose ofdata_sale_opt_outwill NOT have their data forwarded (if the consent state is missing or false for that purpose, data will flow):
For GDPR, you may want a forwarding rule to only send data when a single purpose is consented:
Kits and forwarding rules
If you set up a Forwarding Rule for an embedded kit integration, the iOS and Android SDKs will check consent status for the user on initialization. If the rule condition fails, the kit will not be initialized. Note that kits are only initialized when a session begins or on user change, so if consent status changes in the course of a session, while mParticle will immediately stop forwarding data to the kit, it is possible that an embedded kit may remain active and independently forwarding data to a partner from the client until the session ends.
Forwarding consent state to partners
When the consent state of a profile changes, that change can be communicated to mParticle event integrations. If theconsent_stateobject on an incoming event batch contains changes from the existing profile, mParticle adds a âsystem notificationâ to the batch for each consent state change before the batch is sent to incoming forwarders. This notification contains the full old and new consent state objects:
There are currently two ways that consent state changes are forwarded to mParticle event integrations:
Some partners accept raw event batch data from mParticle, mostly for data storage or custom analytics use cases. For these partners, mParticle will forward the âsystem_notificationsâ object with each relevant event batch. Forwarding of system notifications can be turned off with a user setting. Integrations that can currently receive the system notifications object include:Amazon KinesisAmazon S3Amazon SNSAmazon SQSGoogle Pub/SubGoogle Cloud StorageMicrosoft Azure Event HubsSlackWebhook
Some partners accept raw event batch data from mParticle, mostly for data storage or custom analytics use cases. For these partners, mParticle will forward the âsystem_notificationsâ object with each relevant event batch. Forwarding of system notifications can be turned off with a user setting. Integrations that can currently receive the system notifications object include:
Amazon Kinesis
Amazon S3
Amazon SNS
Amazon SQS
Google Pub/Sub
Google Cloud Storage
Microsoft Azure Event Hubs
Slack
Webhook
mParticle is working with other partners to support forwarding consent state changes as a Custom Event. These events contain the new consent state information as custom attributes, a custom event type of"Consent", and an event name of"Consent Given"or"Consent Rejected". These consent events are forwarded to supporting partners as standard custom events.{"data":{"event_name":"Consent Given","custom_event_type":"Consent","custom_attributes":{"consented":"true","document":"location_collection_agreement_v4","hardware_id":"IDFA:a5d934n0-232f-4afc-2e9a-3832d95zc702","purpose":"location_collection","location":"17 Cherry Tree Lane","regulation":"GDPR","timestamp_unixtime_ms":1523039002083},"event_type":"custom_event"}}Partners that currently accept these custom consent state events include:AmplitudeSnowplowMixpanelGoogle AnalyticsSalesforce DMP
mParticle is working with other partners to support forwarding consent state changes as a Custom Event. These events contain the new consent state information as custom attributes, a custom event type of"Consent", and an event name of"Consent Given"or"Consent Rejected". These consent events are forwarded to supporting partners as standard custom events.
Partners that currently accept these custom consent state events include:
Amplitude
Snowplow
Mixpanel
Google Analytics
Salesforce DMP
âGDPR Consent Changeâ is  listed as a data type in theIntegrations directoryand we will update this list as more partners add support. Please reach out to your success manager if you would like to distribute consent to an additional partner.
Data subject requests
mParticle helps you respond todata subject requestsas mandated by the GDPR and CCPA regulations.
You can search for integrations that support data subject requests in theIntegrationspage. Search on categoryData Subject Request.
Ingest GPC signals
The California Consumer Protection Act (CCPA) and the upcoming CPRA (California Privacy Rights Act) require that users can signal their privacy choices. In support of that requirement, you can ingestGlobal Privacy Control (GPC) signalswith mParticle.
Browsers append the GPC signal to HTTP requests and make it queryable via the DOM. This signal is designed to convey a personâs request to websites and services to not sell or share their personal information with third parties, perthe Global Privacy Control specification. This opt-out is at the browser level, allowing users to turn on the GPC signal for all or specific websites.
The workflow for ingesting and forwarding GPC signals via SDK or Events API:

Sample code for GPC
This sample code show two options: mapping to a GDPR purpose and mapping to a user attribute.
Was this page helpful?

URL: https://docs.mparticle.com/developers/server/http
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/profile-api
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/partners/firehose
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/quickstart/android
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Overview
mParticle is a customer data platform that makes it easy to collect and organize data before sending it to product analytics, A/B testing, marketing automation, and data warehousing tools.
mParticle provides several SDKs and APIs allowing you to collect data from a variety of sources, like a mobile app, web app, or data feeds from other SaaS providers.
You can collect two types of data with mParticle:
Event data: data that describes what your users are doing
User data: data that describes who your users are
Learn how to integrate the Android SDK from start to finish
To demonstrate how mParticle works, you will learn how to track basic event data like page views and purchase events in a web app using the mParticle Android SDK. Then, you will learn how to send that data to a webhook. You will also learn how to manage your data quality by creating a data plan.
mParticle is extremely flexible. There are thirteen SDKs for specific platforms like web, iOS, and Android, in addition to several APIs. mParticle also provides over 250 integrations with data warehouse, analytics, and marketing automation tools.
To keep your first steps with mParticle quick and easy, this tutorial uses the Android SDK and a sample ecommerce app calledThe Higgs Shop.
About the Android SDK
mParticleâs Android SDK supports all Android devices and tablets, including Amazon Fire TV.
By initializing the Android SDK in your app, you gain access to useful methods you can call in your appâs code to send events and user data to mParticle.
Prerequisites
Access to an mParticle instance
In order to begin sending data from your app to mParticle, you will need access to an mParticle account and an API key.
Download the mParticle sample app
This tutorial demonstrates how mParticle works using The Higgs Shop, a sample Android application written in theKotlinprogramming language.
Open your terminal or command prompt, and clone the Androidsample app repositoryon GitHub.
Open the sample app in your IDE and configure your virtual device
If you donât already haveAndroid Studioinstalled on your computer, download and install the correction version for your OS now. You may use another IDE, but we recommend Android Studio.
Open your cloned directory for the Android sample app inAndroid Studioor your IDE of choice.
If you havenât configured a virtual device to emulate the sample app in, click theDevice Managerbutton in the top tool bar.
ClickCreate device.
Select a device category and name in the modal window. We recommendPhoneand any version ofPixel. ClickNext.
Select or download one of the recommended system images and clickNext.
After entering an AVD Name for your configuration, select the Portrait orientation (selected by default), and clickFinish.
With your new virtual device configured, clickRunin the top toolbar to ensure that you can successfully build the sample app.
For now, ignore the API key warning that appears. In the next step, you will create and add your API key and secret before restarting the sample app.
Next >> Create an input
Was this page helpful?

URL: https://docs.mparticle.com/developers/quickstart/ios
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Overview
mParticle is a customer data platform that makes it easy to collect and organize data before sending it to product analytics, A/B testing, marketing automation, and data warehouse tools.
mParticle provides several SDKs and APIs allowing you to collect data from a variety of sources, like a mobile app, web app, or data feeds from other SaaS providers.
You can collect two types of data with mParticle:
Event data: data that describes what your users are doing
User data: data that describes who your users are
Learn how to integrate the iOS SDK from start to finish
To demonstrate how mParticle works, you will learn how to track basic event data like page views and product purchases in a mobile app using the mParticle iOS SDK. Then, you will learn how to send that data to a webhook. You will also learn how to manage your data quality by creating a data plan.
mParticle provides thirteen SDKs for specific platforms like web, iOS, and Android, in addition to several APIs. mParticle also provides over 250 integrations with data warehouse, analytics, and marketing automation tools.
To keep your first steps with mParticle quick and easy, this tutorial uses the iOS SDK and a sample ecommerce app calledThe Higgs Shop.
About the iOS SDK
mParticleâs iOS SDK supports both mobile iOS and tvOS devices.
By initializing the iOS SDK in your app, you gain access to useful methods you can call in your appâs code to send events and user data to mParticle.
Prerequisites
Access to an mParticle instance
In order to begin sending data from your app to mParticle, you need access to an mParticle account and an API key.
Download the mParticle sample app
This tutorial demonstrates how mParticle works using The Higgs Shop, a sample iOS application written in theSwiftprogramming language.
Open your terminal or command prompt, and clone the iOSsample app repositoryon GitHub.
Open the sample app in Xcode
If you donât already haveXcodeinstalled on your computer, download and install the correction version for your OS now.
Navigate to your cloned directory of the iOS sample app and openHiggsShopSampleApp.xcodeprojin Xcode.
Click theRunicon in the toolbar to ensure that you can successfully build the sample app.
For now, ignore the API key warning that appears. In the next step, you will create and add your API key and secret before restarting the sample app.
Next >> Create an input
Was this page helpful?

URL: https://docs.mparticle.com/developers/quickstart/web
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Overview
mParticle is a customer data platform that makes it easy to collect and organize data before sending it to product analytics, A/B testing, marketing automation, and data warehousing tools.
mParticle provides several SDKs and APIs allowing you to collect data from a variety of sources, like a mobile app, web app, or data feeds from other SaaS providers.
You can collect two types of data with mParticle:
Event data: data that describes what your users are doing
User data: data that describes who your users are
Learn how to integrate the Web SDK from start to finish
To demonstrate how mParticle works, you will learn how to track basic event data like page views and purchase events in a web app using the mParticle web SDK. Then, you will learn how to send that data to a webhook. You will also learn how to manage your data quality by creating a data plan.
mParticle is extremely flexible. There are thirteen SDKs for specific platforms like web, iOS, and Android, in addition to several APIs. mParticle also provides over 250 integrations with data warehouse, analytics, and marketing automation tools.
To keep your first steps with mParticle quick and easy, this tutorial uses the web SDK and a sample ecommerce app built using React calledThe Higgs Shop.
About the Web SDK
mParticleâs Web SDK supports commonly used web browsers, connected TVs, and other client-side environments using JavaScript and TypeScript.
By initializing the Web SDK in your app, you gain access to useful methods you can call in your appâs code to send events and user data to mParticle.
Prerequisites
Access to an mParticle instance
In order to begin sending data from your app to mParticle, you will need access to an mParticle account and an API key.
Download the mParticle sample app
This tutorial demonstrates how mParticle works using The Higgs Shop, a sample web application built using React.
Open your terminal or command prompt, and clone the websample app repositoryon GitHub.
Install the sample app
While in your terminal or command prompt, navigate to the root folder of the web sample app:/mparticle-sample-apps/mparticle-web-sample-apps/core-sdk-samples/higgs-shop-sample-app
If you donât haveNode.jsornpminstalled, install them now. Optionally, you may also installNode Version Manager(nvm) which is a helpful tool for installing and managing different versions of Node.
Install the sample appâs dependencies withnpm install
Open the folder /higgs-shop-sample-app in your IDE or text editor. Rename the file.env.sampleto.env. We will replace the environment variableREACT_APP_MPARTICLE_API_KEYwith the API Key in step 5
To run the sample app from your computer, runnpm start. This will start a development server before automatically opening The Higgs Shop in a new browser window.
For now, ignore the API key warning and close the page and stop the development server in your terminal or command prompt. In the next step, weâll create and add our API key before restarting the sample app.
Next >> Create an input
Was this page helpful?

URL: https://docs.mparticle.com/developers
Developer Docs
Shortcuts:
Use the mParticle SDKs and APIs to collect, organize, and manage customer data.
Quickstart
Pick a platform, and follow the SDK quickstart tutorial to see how easy it is to collect data and forward it to a third-party integration.
Learn about mParticle
From event tracking to predicting user behavior, the developer docs guide you through each stage of building a complete mParticle implementation.
SDK
Client SDK
Track and send customer data directly from your app to any server.
Android
iOS
Web
Alexa
AMP
Cordova
Fire TV
Flutter
React Native
Roku
Unity
Xbox
Server SDK
Track and send customer data between servers.
Go
Java
Node
Python
Ruby
Media SDK
Track media events and heartbeats across three platforms.
Android
iOS
Web
API
Events API
Collect data for contexts too complex for the Server SDK.
Bulk Profile Deletion API
Save time when improving data quality by deleting data associated with sets of customers.
Calculated Attributes API
Send seeds for your calculated attributes.
Custom Access Roles API
Create and manage custom sets of permissions for your mParticle account users.
Data Planning API
Define your data schema with Data Master.
Data Subject Request API
Submit data subject requests for GDPR and CCPA compliance via the OpenDSR API.
ID Sync API
Match and resolve identities to build a single user profile for all user activities.
Platform API
Programmatically update your mParticle inputs, outputs, filters, and more.
Pixel Service API
Send data to mParticle from your web site via a tracking pixel.
Profile API
Access user profiles at scale to power personalized experiences.
Group Identity API
Create groups of users based on shared attributes.
Warehouse Sync API
Go beyond Reverse-ETL and build a headless data infrastructure.
Tools
mParticle CLI
Access some mParticle features from a terminal.
Smartype
Manage your data plans as code.
Smartype Linting
Lint your code against your data plan.
More Guides
Data Hosting
Understand how to reference the pod where your org is hosted.
ComposeID
Use IDSync to identify unknown users with data stored in Snowflake.
Glossary
List of mParticle-specific terms.
Partners
Become an mParticle partner and make your platform available for input or output.
Rules
Cleanse and transform data before it is output to another system.
Segment Migration
Migrate your Segment implementation to mParticle.

URL: https://docs.mparticle.com/developers/server/node
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/server/python
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/server/ruby
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/developers/server/json-reference
Not Found
You hit a page that does not exist.

URL: https://docs.mparticle.com/integrations/branch-metrics/feed
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Branch helps mobile apps grow with deep links that power referral systems, sharing links, invites and marketing links with full attribution and analytics.
Input Data Details
The following types of data can be configured to be sent from Branch to mParticle
Attribution
Branch attribution events are mapped as follows:
Event Type = Custom Event
Custom Event Type = attribution
Event Name = If this is an install attribution, the Event Name will beattribution.  Other types of attribution events setup in Branch will be sent using Event Names ofPurchase,Add to Cart,View Items,Product View, etc.
Branch Event Mapping
Branch attribution events are mapped as follows:
General Fields
Custom Attributes
Most attribution events will include the following custom event attributes:
campaign
publisher
ad_set_name
channel
clickid
feature
tags
Depending on your Branch setup, Branch may also send other custom attributes. These attributes may be prefixed with symbols.
~indicates ananalytics tag
$indicates a Branch configuration parameter
+indicates a parameter not instrumented by the user but added by Branch to enrich the event
User Identity Mapping
The Branch user_data_developer_identity can be sent to mPID, Customer ID, or any Other ID using the ID Mappings dropdown in Branch. Additionally, device identifiers associated with the act-as platform will also be provided by Branch.
Configuration
In mParticle, configure the Branch Input.  Create a separate feed configuration for each platform (iOS, Android), and copy the Server Key and Secret.  FollowBranchâs instructionsto use your Server Key and Secret to configure the postback in Branch.

URL: https://docs.mparticle.com/integrations/appsflyer/feed
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Feed
AppsFlyer is a leading Mobile Attribution & Marketing Analytics platform that allows app marketers to easily measure the performance of all their marketing channels - paid, organic and social - from a single real-time dashboard.
Input Data Details
The following types of data can be configured to be sent from AppsFlyer to mParticle
Attribution Events
By default, events from AppsFlyer will be processed as Attribution Events with the following parameters:
Event Type = Custom Event
Custom Event Type = attribution
Event Name = attribution
Uninstall Events
For AppsFlyer uninstall events, the event will be processed with the following parameters:
Event Type = uninstall
Custom Event Type = uninstall
Event Name = uninstall
AppsFlyer Event Mapping
AppsFlyer attribution events are mapped as follows:
Configuration
Configure the AppsFlyer Input:
SelectDirectory, and click the AppsFlyer tile
ClickAdd AppsFlyer to Setup
Select theInput FeedIntegration Type and clickAdd to Setup
Select theAppsFlyerinput configuration group to specify the configuration parameters:
Configuration Name
Act as Application
ClickCreate
Copy the Token
Follow these instructions to configure the postback inAppsFlyer.
Select Configuration >Integrated Partners.
Search for and select mParticle.
In theIntegrationstab, clickActivate Partner.
Enter the mParticle Token, copied from above.
ClickSave & Close.

URL: https://docs.mparticle.com/integrations/braze/feed
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Brazeis a comprehensive customer engagement platform that powers relevant experiences between consumers and brands they love. Braze helps brands foster human connection through interactive conversations across channels.
The Braze Feed allows mParticle to receive Braze interaction data for the iOS, Android and Web platforms. It also supports an âunboundâ feed for events, such as emails, that are not connected to an app platform.
Enable the Braze Feed
LocateBrazein the mParticleDirectoryand add theFeedintegration.
The Braze Feed Integration supports four separate feeds: iOS, Android, Web and Unbound. You will need to create an input for each feed. You can create additional inputs fromSetup > Inputs, on theFeed Configurationstab.For each feed, select an âAct as Applicationâ platform. For iOS, Android and Web, just select the appropriate option from the list. For your Unbound feed, leave this setting at âSelect Applicationâ.
The Braze Feed Integration supports four separate feeds: iOS, Android, Web and Unbound. You will need to create an input for each feed. You can create additional inputs fromSetup > Inputs, on theFeed Configurationstab.

For each feed, select an âAct as Applicationâ platform. For iOS, Android and Web, just select the appropriate option from the list. For your Unbound feed, leave this setting at âSelect Applicationâ.

As you create each input, mParticle will provide you with a Key and Secret. Copy these credentials, making sure to note which feed each pair of credentials is for. Provide the credentials to your Braze account manager and ask them to enable the mParticle feed.
Common Event Data
All events from the Braze Feed will include any available user/device identifiers. Platform feeds will include basic device information.
User Identifiers
Customer ID
Email
Apple Vendor ID (IDFV)
Device Info
Platform
Device Model
Events
The Braze Feed sends events for tracking campaign performance. Included as custom attributes for each event are Brazeâs IDs for the relevant Campaign, News Feed Card, Button, Canvas, etc. You can find the IDâs in the relevant sections of the Braze Dashboard underAPI Identifier. SeeBrazeâs Identifier Typesfor more details.
You can also see a full list of your API Identifiers on BrazeâsDeveloper Console.
A full list of events and their allowed attributes can be found inBrazeâs Documentation. For events withcampaign_id,canvas_id,canvas_step_id, andcanvas_variation_idlisted note that an individual event may have acampaign_id, thecanvas_*attributes, or neither.

URL: https://docs.mparticle.com/integrations?isFeed=true
Documentation
Integrations
Connect your customer data to the leading marketing, analytics, and data warehousing solutions with just a few clicks.
Note: New Partners, pleaseregister.

URL: https://docs.mparticle.com/guides/csv/import
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Import Data with CSV Files
You can import bulk data, both user attribute and events, from your data warehouse or legacy system using comma separated values (CSV) files. You can use this technique in all regions and with all outputs.
Use the following process to load user attribute or event data from CSV files:
1. Create CSV filesFile guidelinesData guidelines
1. Create CSV files
File guidelines
Data guidelines
2. Get credentials for the mParticle SFTP server
3. Configure the Custom CSV Feed
4. Drop CSV files on the SFTP server
1. Create CSV files
Prepare the CSV files for import. Files must follow the guidelines in this section.
File guidelines
Files must adhere to theRFC4180 standardsfor CSV formatting.
Files must be sent in one of the following formats:A plain CSV (.csv)A ZIP file containing one or more CSV files (.zip)A gzipped CSV (.csv.gz).A PGP/GPG-encrypted file with the additional extension.gpgappended, for example,.csv.gpgor.csv.gz.gpg). Only encrypted OR unencrypted files can be accepted, but not both.  You must use PGP encryption with mParticleâs public key. SeeEncrypted filesfor additional instructions.
Files must be sent in one of the following formats:
A plain CSV (.csv)
A ZIP file containing one or more CSV files (.zip)
A gzipped CSV (.csv.gz).
A PGP/GPG-encrypted file with the additional extension.gpgappended, for example,.csv.gpgor.csv.gz.gpg). Only encrypted OR unencrypted files can be accepted, but not both.  You must use PGP encryption with mParticleâs public key. SeeEncrypted filesfor additional instructions.
File sizes should be between 5 MB and 2 GB. If you upload files outside these limits, processing speed is slower. If possible, split the data across multiple small files, because their processing can be parallelized.
Each file can only contain events of the same event type. You canât mix events of different types in the same file.
Donât use subfolders.
Each row size should be under 80 KB. Larger rows may impact performance.
All column names must be unique.
Each CSV file must contain fewer than 50 columns.
File name requirements:Do not use any dashes ( - ) or dots ( . ) in your file name, other than what is described below.End the file name based on the event content in your file:-custom_event.csv-commerce_event.csv-screen_view.csv-eventless.csvfor eventless uploads of user identities and attributes
File name requirements:
Do not use any dashes ( - ) or dots ( . ) in your file name, other than what is described below.
End the file name based on the event content in your file:-custom_event.csv-commerce_event.csv-screen_view.csv-eventless.csvfor eventless uploads of user identities and attributes
Column names: specify fields according to ourJSON Schema, using dot notation.Column names described are case sensitive.
Column names: specify fields according to ourJSON Schema, using dot notation.
Column names described are case sensitive.
Data guidelines
Environment: include a column nameenvironmentset todevelopmentorproduction. If anenvironmentcolumn is not included, data is ingested into the production environment.
User and Device IDs: as with any data sent to mParticle, you must include a column with at least one user ID or device ID.Device IDsdevice_info.android_advertising_iddevice_info.android_uuiddevice_info.ios_advertising_iddevice_info.att_authorization_statusdevice_info.ios_idfvdevice_info.roku_advertising_iddevice_info.roku_publisher_iddevice_info.fire_advertising_iddevice_info.microsoft_advertising_idUser IDsmpiduser_identities.customeriduser_identities.emailuser_identities.facebookuser_identities.microsoftuser_identities.twitteruser_identities.yahoouser_identities.otheruser_identities.other2user_identities.other3user_identities.other4
User and Device IDs: as with any data sent to mParticle, you must include a column with at least one user ID or device ID.
Device IDs
device_info.android_advertising_id
device_info.android_uuid
device_info.ios_advertising_id
device_info.att_authorization_status
device_info.ios_idfv
device_info.roku_advertising_id
device_info.roku_publisher_id
device_info.fire_advertising_id
device_info.microsoft_advertising_id
User IDs
mpid
user_identities.customerid
user_identities.email
user_identities.facebook
user_identities.microsoft
user_identities.twitter
user_identities.yahoo
user_identities.other
user_identities.other2
user_identities.other3
user_identities.other4
User attributes:If you include user attributes, for each, include a column named asuser_attributes.key, wherekeyis a user attribute key. For example:user_attributes.$FirstNameuser_attributes.communication_preferenceuser_attributes.Member TierAttribute names with spaces are allowed and do not require quotes. All the keys listed in theJSON Referenceare supported.
User attributes:
If you include user attributes, for each, include a column named asuser_attributes.key, wherekeyis a user attribute key. For example:
user_attributes.$FirstName
user_attributes.communication_preference
user_attributes.Member Tier
Attribute names with spaces are allowed and do not require quotes. All the keys listed in theJSON Referenceare supported.
Events:Use a column namedevents.data.timestamp_unixtime_msto set the event time.Use a column namedevents.data.custom_attributes.key, wherekeyis an event attribute key, to set custom event attributes.Attribute names with spaces are allowed and do not require quotes. All the keys listed in theJSON Referenceare supported.Screen view events: use a column namedevents.data.screen_nameif you want to include the screen name.Custom events: use columns namedevents.data.event_nameandevents.data.custom_event_typeto include custom events.Commerce events: use columns with the following names for commerce events.events.data.product_action.actionevents.data.product_action.products.idevents.data.product_action.products.nameevents.data.product_action.products.categoryevents.data.product_action.products.brandevents.data.product_action.products.variantevents.data.product_action.products.positionevents.data.product_action.products.priceevents.data.product_action.products.quantityevents.data.product_action.products.coupon_codeevents.data.product_action.products.added_to_cart_time_msevents.data.product_action.products.total_product_amountevents.data.product_action.products.custom_attributesOnly one product per event can be included for commerce events uploaded via CSV.
Events:
Use a column namedevents.data.timestamp_unixtime_msto set the event time.
Use a column namedevents.data.custom_attributes.key, wherekeyis an event attribute key, to set custom event attributes.Attribute names with spaces are allowed and do not require quotes. All the keys listed in theJSON Referenceare supported.
Screen view events: use a column namedevents.data.screen_nameif you want to include the screen name.
Custom events: use columns namedevents.data.event_nameandevents.data.custom_event_typeto include custom events.
Commerce events: use columns with the following names for commerce events.events.data.product_action.actionevents.data.product_action.products.idevents.data.product_action.products.nameevents.data.product_action.products.categoryevents.data.product_action.products.brandevents.data.product_action.products.variantevents.data.product_action.products.positionevents.data.product_action.products.priceevents.data.product_action.products.quantityevents.data.product_action.products.coupon_codeevents.data.product_action.products.added_to_cart_time_msevents.data.product_action.products.total_product_amountevents.data.product_action.products.custom_attributesOnly one product per event can be included for commerce events uploaded via CSV.
Commerce events: use columns with the following names for commerce events.
events.data.product_action.action
events.data.product_action.products.id
events.data.product_action.products.name
events.data.product_action.products.category
events.data.product_action.products.brand
events.data.product_action.products.variant
events.data.product_action.products.position
events.data.product_action.products.price
events.data.product_action.products.quantity
events.data.product_action.products.coupon_code
events.data.product_action.products.added_to_cart_time_ms
events.data.product_action.products.total_product_amount
events.data.product_action.products.custom_attributes
Only one product per event can be included for commerce events uploaded via CSV.
Data types:All data in the CSV is converted to a string. The only exceptions to this are values that require a particular data type, such as MPID or IDFA.Only standard custom events and screen views, and eventless batches (eventless drops of user identity and attributes), have been tested.Attributes sent as arrays are not fully supported. When the entire array is present in a single cell of the CSV file, it is supported and is converted to string. Because there is no way of specifying anything but the first item in an array, repeated header columns, each subsequent column overwrites the previous one. Multiple columns donât append to the array. This is why you can only include one product for ecommerce events. Commerce events in the Events API support arrays in multiple places, but with CSV files, you can only populate a single item in each of these arrays.
Data types:
All data in the CSV is converted to a string. The only exceptions to this are values that require a particular data type, such as MPID or IDFA.
Only standard custom events and screen views, and eventless batches (eventless drops of user identity and attributes), have been tested.
Attributes sent as arrays are not fully supported. When the entire array is present in a single cell of the CSV file, it is supported and is converted to string. Because there is no way of specifying anything but the first item in an array, repeated header columns, each subsequent column overwrites the previous one. Multiple columns donât append to the array. This is why you can only include one product for ecommerce events. Commerce events in the Events API support arrays in multiple places, but with CSV files, you can only populate a single item in each of these arrays.
Custom manifest: You can use a custom manifest to drop files created in another system without transforming them. For details, seeUse a custom manifest.
2. Get credentials for the mParticle SFTP server
mParticle maintains an SFTP server where you will drop your CSV files.
Use the following instructions to securely retrieve your credentials and find the hostname and path to use when you drop your files on the SFTP server.
To get your SFTP username and password:
Sign up for a Keybase account with your work email athttps://keybase.io/. Keybase is a secure tool which includes end-to-end encrypted chat.
Provide your Keybase account name to your Customer Success Manager or your mParticle Solutions Consultant so that they can pass it on to our Ops team.
Expect to receive your SFTP access credentials in a Keybase chat from mParticle. Note that if you need to use credentials that you already have, youâll share those credentials in the Keybase chat.
3. Configure the Custom CSV Feed
Configure the Custom CSV Feed as input. This step provides the hostname and folder path on the SFTP server where your CSV files must be dropped.
To configure the Custom CSV Feed:
VisitSETUP > Inputs > Feedsin the mParticle UI and click theAdd Feed Inputbutton, then select Custom CSV Feed from the list.If youâve already added the Custom CSV Feed, it wonât show up in the list. Scroll through the list of feeds until you seeCustom CSV Feed, and then click the large plus sign in the gray bar to create a new feed. You need one feed for each different event type.
VisitSETUP > Inputs > Feedsin the mParticle UI and click theAdd Feed Inputbutton, then select Custom CSV Feed from the list.
If youâve already added the Custom CSV Feed, it wonât show up in the list. Scroll through the list of feeds until you seeCustom CSV Feed, and then click the large plus sign in the gray bar to create a new feed. You need one feed for each different event type.
Enter the following values:Configuration Name: enter a name that makes this feed easy to recognize in your list of feeds.Custom Event Name: if you are importing a custom event, enter the name that will be used for the custom event.Custom Event Type: if you entered a custom event name, select the event type.Custom Manifest: if you are using acustom manifest, paste it in the text box provided.Expect Encrypted Files: if you will import a PGP/GPG-encrypted file, select this option.
Enter the following values:
Configuration Name: enter a name that makes this feed easy to recognize in your list of feeds.
Custom Event Name: if you are importing a custom event, enter the name that will be used for the custom event.
Custom Event Type: if you entered a custom event name, select the event type.
Custom Manifest: if you are using acustom manifest, paste it in the text box provided.
Expect Encrypted Files: if you will import a PGP/GPG-encrypted file, select this option.
After you complete the connection configuration, clickIssue SFTP Details. mParticle displays your hostname and path for mParticleâs SFTP server.
4. Drop CSV files on the SFTP server
Connect to the mParticle SFTP server using the credentials provided. Once you have connected, the mParticle creates thedropfolder. If you donât see one, create a folder nameddrop.
Create a new folder inside thedropfolder, and name it using the pathname provided in the mParticle UI as shown in the previous section. For example, based on the previous example, the folder path and name issftp.mparticle.com:4422:drop/us1-123456789123456789/.Hint:Verify that there are no trailing spaces in the name.
Use your credentials to upload your CSV files to mParticleâs SFTP server, using the correct path and folder name from the previous step.
Files on the SFTP location are added to the processing queue nearly immediately.  Depending on file count and file size, a backlog may develop. You can observe how much data has been processed using Data Master and your outbound connections. There is no notification of processing progress or completion.
Was this page helpful?

URL: https://docs.mparticle.com/integrations/mixpanel/event
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Event
Mixpanelâsmission is to increase the rate of innovation. Companies use Mixpanel to analyze how & why users engage, convert, and retain in real-time on web, mobile, and IoT devices, and then use the data to improve their products.
Overview & Prerequisites
If you are new to setting up Mixpanelâs Mobile App Analytics, your best place to start is Mixpanel itself and the below are must-reads before proceeding:
Mobile App Analytics Setup Overview:https://mixpanel.com/help/reference
Best Practices for setting up your events:https://mixpanel.com/help/reference/ios#sending-events
When mParticle sends data to Mixpanel, Mixpanelâs APIs are utilized.  This allows mParticle to implement server side data forwarding and supports our value proposition to customers of not requiring that additional app SDK components be continually added and updated for integrations.
In order to enable mParticleâs integration with Mixpanel, you will need an account with Mixpanel and have your Mixpanel Token for mParticle configuration. Your Mixpanel Token can be found at the Mixpanel topic,Find Project Token.
Data Processing Notes
User and Event attributes with string values of"true"or"false"(not case sensitive), will be converted to boolean values before being forwarded to Mixpanel.
Supported Features
mParticleâs SDK supports nearly all of the Mixpanel SDK specific features natively. When you use the mParticle SDK, mParticle events will be transformed using Mixpanel-compliant naming conventions and activate the corresponding features automatically.
User Identification
One of the key features of Mixpanel is funnel tracking, this feature requires a consistent approach to identifying your users as they sign up, and progress from being only identifiable by their device, to having a unique âlogged inâ ID.
mParticle manages this process using itsIDSync feature. IDSync gives you granular control over how user profiles are managed. To support IDSync, mParticle maintains a hierarchy of different ID types.
A traditional Mixpanel implementation, using the Mixpanel SDK, manages sign-up funnels by using the following process:
When a user first downloads your app, theDistinct IDis set using adefault anonymous device id(Apple Advertising ID for iOS, a random GUID for Android, a Cookie ID for Web).
When you know the identity of the current user, typically after log-in or sign-up, you call Mixpanelâsidentifymethod. Mixpanel recommends against using identify for anonymous visitors to your site.
If your project has MixpanelâsID Mergefeature enabled, the call toidentifywill connect pre- and post-authentication events when appropriate.
If your project does not have ID Merge enabled,identifywill change the userâs local distinct_id to the unique ID you pass. Events tracked prior to authentication will not be connected to the same user identity. If ID Merge is disabled,  Alias can be used to tie the original Distinct ID (an anonymous device ID) and the new Distinct ID (a unique User ID) together in Mixpanel.
If this process is not followed correctly, funnel tracking wonât be possible, as Mixpanel will see the two Distinct IDs as two completely separate users.
If you wish to use Mixpanelâs funnel tracking features, here is one option for implementing with mParticle:
Option 1 - Use mParticle ID as the Distinct ID
This option is recommended for new implementations.This option lets your Mixpanel user profiles mirror those maintained by mParticle. This option lets your mParticle Identity strategy take care of aliasing for you, before your data ever reaches Mixpanel.
For this to work, you need to have selected an Identity Strategy that supports funnel tracking, such as theProfile Conversion Strategy. If you use the Profile Conversion Strategy and mParticleâsCustomer IDas your logged-in ID type, a sign-up flow works as follows:
When a user first downloads your app, mParticle creates a new user profile, with a new, unique mParticle ID. mParticle immediately begins forwarding event data to Mixpanel, mapping the mParticle ID to Mixpanelâs Distinct ID.
When the user creates an account, and you add a Customer ID, mParticle associates the new Customer ID with the original user profile. Now you have a new way of identifying users in the mParticle SDK, themParticle IDâ mapped to Mixpanel as the Distinct ID â which never changes.
To use this option, set theExternal Identity TypetomParticle IDin theConfiguration Settings.
Note that this example is the minimum necessary to demonstrate the required sign-up flow and does not include additional features, such as completion handlers. Refer to the full Identity documentation:
iOS
Android
Web
Supported Feature Reference
To support each feature in theSupported Featurestable above, multiple methods will need to be implemented. The following table shows the mapping between each feature and SDK methods.
Event Tracking
Tracking standard events in the mParticle SDK is fairly straightforward. Events can be standalone or include event attributes. mParticle attributes are converted to Mixpanel properties automatically when forwarded.
Historical Event Tracking
mParticle sends data to different Mixpanel endpoints depending on the age of the events:
Events that are less than or equal to 5 days old are sent to thetrackendpoint.
Events that are greater than 5 days old are sent to theimportendpoint.  In order for mParticle to send the historical data to Mixpanel, you must provide theAPI Secret. If not provided, mParticle will drop these events.
Super Property Tracking
Super properties allow certain properties that you want to include with each event you send. Generally, these are things you know about the user rather than about a specific event, for example, the userâs age, gender, or source. These super properties will be automatically included with all tracked events. Super properties are saved to device storage, and will persist across invocations of your app.
Setting User Properties and Attribute Mapping
Both Mixpanel and mParticle have the ability to set specific attributes for the user which will persist until overwritten.
If you have enabled the âInclude User Attributesâ setting, then any messages with type ScreenView or AppEvent will include the email user identity (if available) and all user attributes.  TheSetUserAttributemethod can be used to set user attributes. This method will overwrite the values of any existing user attributes.
Attribute Mappings
mParticleâs attribute naming conventions closely resemble standard Mixpanel attributes, which a few exceptions:
These mParticle attributes will just have the leading $ removed:
If these attributes are seen, they will be replaced with Mixpanel attributes:
With available user identity info and user attributes, standard people data being sent includes:
action type:$set for user identification
token:the applicationâs Mixpanel token
distinct_id:deviceâs UDID or userâs customerId
ip:the IP address of the request or â0â
time:the message timestamp
insert_id:used to de-duplicate events - this is set to mParticle event_id.
Data being sent in the $set section:
user attributes:following the rules inAttribute mappings
email address:if it exists in the user identities
Revenue Tracking and Commerce Events
In order to track revenue using mParticle and Mixpanel, you need to ensure that mParticle is forwarding on relevant data by enabling theUse Mixpanel Peoplesetting.  If the mParticle SDK method has been called to log an event, the event and one event attribute have been set up for LTV tracking, and the event is not excluded by an account policy, a transaction message will be sent to Mixpanel.
Only specific data will be considered as part of the transactional funnel. Standard message data format is:
action type:$transaction for a TrackCharge message
token:the applicationâs Mixpanel token
distinct_id:deviceâs UDID or userâs customerId
ip:the IP address of the request or â0â
time:the message timestamp
insert_id:used to de-duplicate events - this is set to mParticle event_id.
Data being sent in the transactions section:
$amount:the total value of the event
$time:the message timestamp in the formatyyyy-MM-dd'T'HH:mm:ss
event attributes:follows the rules inAttribute Mappings
Web Attributes
Event batches sent to Mixpanel using the server-side web integration will also send the following data:
browser:the userâs web browser
browser version:the version of the web browser
os:the userâs operating system
Note that this data depends on thehttp_header_user_agentfield so they will only be set if a value is included in the batch.
EU Data Localization
By default, mParticle sends data to Mixpanelâs US Servers, but offers an EU Data Localization option for theiringestion API, which allows data to be sent and stored in the Mixpanel EU Data Center (see Mixpanelâs documentation onStoring Your Data in the European Union). This EU Residency is not automatically set within a Mixpanel project. You can find steps on how to set EU Data Localization for your Mixpanel project withinthe Mixpanel documentation. In mParticle, theMixpanel Target Server Configuration Settingmust be set toEU Residency Server.
Configuration Settings
Connection Settings

URL: https://docs.mparticle.com/integrations/amplitude/event
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Event
Amplitudeprovides product analytics that helps companies leverage cross-platform behavioral data to drive user growth.
Supported Features
Analytics
Data Export
Real-Time Dashboards
Retroactive Funnels
Prerequisites
To activate mParticleâs integration with Amplitude, you need the Amplitude API Key for each app that youâd like to set up.  Your API key is listed on theAmplitude Project Settings page.
The Amplitude integration requires themParticle Amplitude Kitwhen connected to a web input. If you are initializing the web SDK using theSnippet Optionthen the Kit is automatically included for you. If you areSelf Hostingthe SDK then you need to add this kit manually into your source code.
Data Processing Notes
mParticle will forward User Identities and Attributes to Amplitude, even if there are no events in the batch.
Device/User ID Mapping
Every event in Amplitude has a main Device ID field. mParticle populates this field as follows:
For Android, the Android ID (falling back to the Android Advertising ID if unavailable)
For iOS, the IDFA (falling back to the IDFV if unavailable)
For Roku, the Roku Advertising ID (falling back to the Roku Publisher ID if not available)
For FireTV, the Fire Advertising ID.
Amplitude also has dedicated fields for particular Device IDs, such as IDFA and Android ID. These will be populated if the ID is available. SeeField Mappings, for more information.
Amplitude requires either a Device ID or a User ID. User ID can be mapped as Email, Customer ID or mParticle ID. If no accepted identifiers are present, data will not be forwarded.
Forwarding Web Data
By default, mParticle forwards web data to Amplitude client-side, by directly invoking Amplitudeâs Javascript methods. Optionally, you can choose to forward web data server-to-server in theConnection Settings. Note that if you choose this option, your incoming data must have your selected User ID to be forwarded.
Data Localization
By default, mParticle sends data to the Amplitude organizationâs US endpoint for theHTTP API, but Amplitude offers a different endpoint for EU organizations. In mParticle, theAmplitude Organization Configuration Settingallows you to select a target Amplitude organization location.
Event Data Mapping
Screen Views
mParticle will forward all screen views to Amplitude with the Amplitude Event Type set to âViewed ScreenNameâ, whereScreenNameis the screen name passed to thelogScreenSDK method (or the name of the screenâs Activity class if youâre using automatic screen tracking on Android).
Session Forwarding
mParticle will forward all session start and session end events to Amplitude with the Amplitude Event Type set tosession_startandsession_end.
eCommerce Event Forwarding
Each valid eCommerce event sent to mParticle is expanded into multiple events before being translated and forwarded to Amplitude. While this expansion applies to all eCommerce transactions, the resulting events are dependent on the type of eCommerce event being forwarded and the number of products in the event.
Note: mParticle will not attempt to forward eCommerce Events to Amplitude which contain no Products.
The eCommerce events resulting from the expansion that may be forwarded to Amplitude are:
Transaction level events (e.g.eCommerce - Purchase)
Item level events (e.g.eCommerce - Purchase - Item)
Revenue events (e.g.[Amplitude] Revenue)
Transaction Event
One Transaction Event is forwarded to Amplitude for every valid eCommerce event provided.
Contains a summary of the transaction, including a JSON array of the products sent in the initial eCommerce event.
Item Events
One Item Event is forwarded to Amplitude for every product inside the provided eCommerce event.
Each Item event contains information about one of the products in the provided eCommerce event.
Revenue Event
One Revenue Event is forwarded to Amplitude for every validPurchaseorRefundeCommerce event provided. Otherwise none is sent.
The name of the Revenue Event is set by Amplitude, and contains revenue information about the Purchase or Refund event.
eCommerce Event Naming
Each valid eCommerce event sent to mParticle will result in a transaction level event being sent to Amplitude. This event contains a summary of the transaction, including a JSON array of the products sent in the initial eCommerce event.
The name given to the Transaction and Item Level Events is determined from theProduct Actionprovided on the eCommerce Event sent to mParticle.
Custom Event Forwarding
Custom events logged via mParticleâslogEventSDK method and their attributes will be forwarded to Amplitude, with the event name passed tologEventas the Amplitude Event Type. An event namemustbe specified or an error will be returned.
Attribution Custom Event Forwarding
Attribution Custom events will be forwarded to Amplitude prefixed with the attribution provider in the event name.  For example,[AppsFlyer] attribution.  Event Attributes that are included with the event are forwarded to Amplitude in user_properties, also prefixed with the attribution provider.
Push Registration
mParticle will forward all push registration events to Amplitude with the Amplitude Event Type set toPush Registration. All Field Mappings defined in this documentation will be forwarded too.
Application State Transition Forwarding
If theSend Application State Transitionssetting is enabled, Application State Transition events will be forwarded to Amplitude as follows:
Field Mappings
Server to Server Web Requests
Only for web requests, mParticle will extract OS and browser info from HTTP user agent.
Similar to Amplitudeâs SDK behavior,os_nameandos_versionwill be populated with browser info. For that reason, mParticle will send 2 additionalCustom User Properties,web_os_nameandweb_os_version, that will contain OS info. SeeAmplitudeâs doc.
mParticle will also populatedevice_brandanddevice_modelfrom the HTTP user agent if theExtract Device Family from User Agentsetting is enabled. With this setting enabled, if mParticle cannot determine the device brand or model, it will populatedevice_brandwith the same value as is set forweb_os_name. Note, the device values may differ slightly between S2S events and events sent through the Amplitude web kit.
Configuration Settings
Connection Settings

URL: https://docs.mparticle.com/integrations/facebook/event
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Event
This section describes the configuration settings necessary to activate mParticleâs event tracking integration with Facebook.  The event tracking integration enables conversion tracking for Facebook advertising campaigns.
Supported Features
Event Forwarding
Data Processing Notes
Facebook has limits around the number of unique event names and attributes their platform can process as noted here:https://developers.facebook.com/docs/reference/android/current/class/AppEventsLogger/
1000 unique event names
25 attributes per event
Between 2 and 40 characters in an event name and attribute
It may takes up to 24 hours to see refreshed stats in Facebook Analytics
Prerequisites
Event data from mParticle to Facebook is typically sent server side.  However, Web data can be sent client or server side based on your implementation and settings.  These different options require different settings:
iOS, tvOS, and Android - data is sent S2S, and youâll need your appâs Facebook Application ID and Application Secret
Data Feeds - data is sent S2S, and youâll need your Facebook Pixel ID
Web - for client side kit, youâll need your Facebook Pixel ID
Web - for S2S, youâll need your Facebook Pixel ID and Facebook Marketing API Access Token. You also need to enable both theUse Pixel Server-Side ForwardingandForward Web Requests Server Sidesettings.
Roku, Xbox, SmartTV, FireTV, Alexa - youâll need your Facebook Pixel ID and Facebook Marketing API Access Token.
os_versionis required for iOS/tvOS events. Ifos_versionis not present, the event will be rejected and an error message will be shown inSystem Alerts.
Configuring Facebook Pixel Server-to-Server
You need to perform a few steps in Facebook to create aFacebook Pixel S2Sconnection.
Navigate to the Facebook Events Manager
Connect a New Data Source:  SelectWebwith a connection method ofConversions API.
Create an Access Token:Open the settings for the new Pixel Data Source, scroll to theConversions API>Set up manuallysection and clickCreate Access Token. Follow the steps described and copy theAccess Tokenfor setup in mParticle.
Configuring Duplicate Events
Facebook recommends sending the same pixel event twice - once from the browser and once from the server. If done incorrectly, this can result in duplicate events appearing in Facebook. The following steps walk through how to configure this within mParticle.
Using only the mParticle Web SDK (Recommended)
To do this using mParticle, you will need to perform the following steps:
Setup the mParticle Web SDK in your application
Setup two configurations for mParticleâs Facebook integration. One of these configurations must haveUse Pixel Server-Side Forwardingenabled and the other must not. Both must have an access token set.
Connect both of these configurations to yourWebinput. The configuration with server-side Pixel forwarding enabled, must also haveForward Web Requests Server Sideenabled. Similarly, the connection with Pixel server-side forwarding disabled, must haveForward Web Requests Server Sidedisabled.
Other Scenarios
Ideally, all Web data sent to mParticle will be sent through the mParticle Web SDK, but it is still possible to deduplicate events outside of this flow if necessary. To ensure redundant events sent through Facebook Pixel and the Facebook Conversions API are correctly deduplicated when they reach Facebook, two conditions must be met:
Events must have consistentevent_namevalues.
Events must have consistentevent_idvalues. For this, thefieldsource_message_idmay be used to manually set the Event ID sent to Facebook.
If you use the mParticle Web SDK and server-side web integration, then this will be automatically handled.
If you need to manually assign asource_message_idvia the web SDK and server-side separately, use the following API:
You can also assign asource_message_idto commerce events:
Note that your workspace will need to be on event batching in order to leverage passing a customsource_message_idto the Web SDK for this to work.  If you are not on web batching, please contact your customer success manager.
Visit theFacebook Business Help CenterandFacebook For Developersfor more information on the subject of deduplication.
Troubleshooting Facebook Pixel Issues
Please run through the following steps to confirm your settings are correct:
Verify your access token is of typeSystem Userand will never expire using this page:https://developers.facebook.com/tools/debug/accesstoken/
Verify your Pixel ID is valid using this page. Please enter the ID and confirm theSend To Test Eventsworks:https://developers.facebook.com/docs/marketing-api/conversions-api/payload-helper/
If you run into issues with either of the above steps, please repeat the steps described inConfiguring Facebook Pixel Server-to-Server.
Event Data Mapping
The iOS/tvOS and Android integrations forward App State Transition, Commerce, Custom, Screen View, and Session Start events.
The Web integration forwards Commerce, Custom, Screen View, and Session Start / End events.
iOS14 Update for Device Data Mapping
The Facebookadvertiser_tracking_enabledfield is set based on theatt_authorization_statusandlimit_ad_trackingfields as defined below.  Check theiOS14 Implementation guidefor more information.
Ifatt_authorization_statusis available:
Ifatt_authorization_statusis not available, thelimit_ad_trackingfield is evaluated:
User Data Mappings
mParticle will send a variety of user data fields to Facebook for advanced matching. The specific fields sent depends on if Facebook Pixel server-side forwarding is enabled or not.
Facebook Pixel Server-Side Forwarding Disabled
mParticle will hash and send the following fields to Facebook when they are set for a user.
Facebook Pixel Server-Side Forwarding Enabled
Custom Mappings
mParticleâs Facebook integration supportscustom mappingswhich allows you to map your events and attributes for Facebook. mParticle provides mappings for the following Facebook event types:
fb_content_type
When setting up the custom mappings, the fb_content_type can provide additional information on the event to be used forCollaborative Ads.  The acceptable values for fb_content_type are:
product
product_group
destination
flight
hotel
vehicle
[âproductâ, âlocal_service_businessâ]
If a value provided for fb_content_type is not in the above list, the value sent will beproduct.
Product Events
mParticle forwards the mParticle product events Added to Cart and Added to Wishlist to Facebook using Facebookâs corresponding pre-defined event names.  mParticle Product Views are forwarded to Facebook as the pre-defined event âViewed Contentâ.  The unit price, currency, product category, and SKU are passed to Facebook as well.  See below for a sample Added to Cart event call using the Facebook SDK, and an equivalent call using the mParticle SDK.
Purchase Events
Purchase events logged through mParticleâs eCommerce SDK methods will be forwarded to Facebook using Facebookâs âPurchasedâ pre-defined event name.
Custom Events
All custom app events, which are logged via mParticleâslogEventSDK method, will be forwarded to Facebook as custom app events, using the event name passed to mParticleâslogEventSDK method.
Screen Views
For theWebplatform, mParticle will forward screen views as âPageViewâ events.
Note:This also applies to Pixel server-side forwarding.
For theiOS/tvOSandAndroidplatforms, screen views are supported by custom mappings. Reference thecustom mappingssection for more.
Web Server-to-Server Fields
There are several fields only accepted by server-to-server Web connections. These fields and the mParticle fields they are set from are listed below:
*Custom data fields can also be set via custom mappings or E-Commerce event fields. See the relevant sections for more details.
Configuration Settings
Connection Settings

URL: https://docs.mparticle.com/integrations/braze/event
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Event
Brazeis a comprehensive customer engagement platform that powers relevant experiences between consumers and brands they love. Braze helps brands foster human connection through interactive conversations across channels.
Braze offers a broad range of functionality via their solution and it is critically important that you work directly with your Braze representative to ensure that you are correctly planning and implementing their features.  mParticle does not recommend enabling forwarding to Braze until you have completed the Braze planning process with your Braze team.
Braze Documentation
mParticle Braze Implementation Scenarios
ThemParticle SDKallows you to include the Braze kit which allows Braze interface components (images, layout files, etc.) and as a result supports many Braze features, including:
App Analytics
User Segmentation
Push Notifications
Email
News Feed
In-App Messaging
Feedback
Geolocation
Features are supported by the mParticle SDK only after you install themParticle Braze Kit(formerly Appboy), which then forwards data from your app to Braze.
Features are supported in two ways:
The kit itself provides functionality directly without you having to call the third-party SDK. For example, most partners have a method called or equivalent tologEvent.  When someone callsmParticle.logEvent, our kits map to the partner SDKlogEventmethod, in this case,Braze.logEvent, and automatically sends it to Braze. You donât have to callBraze.logEventbecause mParticle does it for you after you callmParticle.logEvent.
For some features, for example some Braze banners or modals, you must callBraze.bannerMethod()orBraze.modalMethod(). Our kit loads Braze so that you can call any Braze method you need, even if our kit does not call it for you.
The mParticle S2S APIallows you to send data server side (API reference). The S2S API supports iOS, Android and Web data. In this scenario, mParticle forwards data via Brazeâs REST API which supports a limited set of features.
For server-side data to be forwarded to Braze, it must include your selected External Identity Type. To relax this requirement, see the Disable External ID Constraint connection setting.
The following event types can be forwarded to Braze via S2S:
Commerce Event
Custom Event
Opt Out
Push Message
Push Message Registration
Screen View
Session Start / End
Kit Integration
The Braze solution offers features that involve Braze-proprietary user interaction components including Newsfeed, In-App Messaging, and Feedback.
To use Braze with one of the mParticle mobile SDKs, please review the kit documentation for theAndroid SDKor theiOS SDK.
You must directly call the Braze kit to use the Newsfeed, In-App Messaging, and Feedback features. Examples of directly calling a kit are provided for bothAndroidandiOS.
Braze v9 iOS SDK Upgrade Notes
To comply with Appleâs iOS 17 privacy manifest it is required to update to Braze SDK version 9.0.0 or later which is included by the mParticle Braze Kit version 8.60 or later. Note that it is also required to update to at least version 8.24.0 of the mParticle SDK if you are not creating your own Braze instance and passing it to the mParticle Braze Kit in order for this functionality to work.
There are also additional steps required to comply which are outlined in the Braze documentationhere.
If you are creating your own Braze instance and passing it to the mParticle Kit as described in the iOS App Launch Tracking sectionbelow, you can simply follow instructions in the above Braze documentation directly.
If not, you will still need to follow the above Braze documentation, with the following exceptions:
Set thetrackingPropertyAllowListproperty on the mParticle Braze Kit before starting the mParticle SDK instead of setting it on the Braze instance directly.
In yourATTrackingManagerrequest callback, call the corresponding method on the mParticle SDK instead of setting it on the Braze instance directly.
Push Notifications
Push notifications work differently for web and for mobile.
mParticle integrates with Braze to allow web push notifications to further engage your visitors. We integrated BrazeâsSoft Push Prompts, which allows you to ask your user if theyâd like to stay in touch before the browser alerts them to allow notifications. This is done since the browser throttles how often you can prompt the user for push notifications, and if the user denies permission, you can never ask them again. See below for directions on how to implement push notifications, which customizes Brazeâsimplementation instructionsto work with mParticle.
Configure your siteCreate aservice-worker.jsfile to your root directory. Inside yourservice-worker.jsfile, includeself.importScripts('https://static.mparticle.com/sdk/js/braze/service-worker-3.5.0.js');mParticle hosts Brazeâs service worker in order to prevent unpredictable versioning issues. Do not use Brazeâs service-worker.js CDN.
Configure your site
Create aservice-worker.jsfile to your root directory. Inside yourservice-worker.jsfile, include
mParticle hosts Brazeâs service worker in order to prevent unpredictable versioning issues. Do not use Brazeâs service-worker.js CDN.
Configure Safari PushGenerate a Safari Push Certificate following these âRegistering with Appleâ InstructionsIn the Braze dashboard, on theapp settings page(where your API keys are located), select your Web app. Click âConfigure Safari Pushâ and follow the instructions, uploading the push certificate you just generated.In your mParticle dashboard, open your Braze connection settings. UnderSafari Website Push ID, type in yourWebsite Push IDyou used when generating your Safari Push Certificate (beginning withweb) and clickSave.
Configure Safari Push
Generate a Safari Push Certificate following these âRegistering with Appleâ Instructions
In the Braze dashboard, on theapp settings page(where your API keys are located), select your Web app. Click âConfigure Safari Pushâ and follow the instructions, uploading the push certificate you just generated.
In your mParticle dashboard, open your Braze connection settings. UnderSafari Website Push ID, type in yourWebsite Push IDyou used when generating your Safari Push Certificate (beginning withweb) and clickSave.
Create a âPrime for Pushâ in-app messaging Campaign on the Braze dashboard. Note that this is anIn-App MessagingCampaign, and not aPush Notificationmessaging campaign.Make it a âModalâ In-App Message. Give it whatever text and styling you wish to present to the user (âCan we stay in touch?â).Give the in-app message a Button 1 Text value of âOKâ (or whatever affirmative text you wish), and set the On-Click Behavior to âClose Message.âUnder the gear composer section, add a key-value pair. Give it a key ofmsg-idand a value ofpush-primer.You can create aprime-for-pushcustom event (or name it whatever youâd like) from the Braze dashboard. While still in the Braze dashboard, create a trigger action of whatever your custom event is (ie,prime-for-push). In the mParticle Braze connection settings, fill in the"Soft Push" Custom Event Namewith your custom event name (ie.prime-for-push). When this field is filled, users will be sent the Soft Push Prompt on session load.Optionally, you can change the name and location ofservice-worker.js. The following example will clarify the steps:Letâs say that you want to rename yourservice-worker.jsfile tobraze-push-worker.jsand store it in inside a directory in your root folder calledthirdParty/.In your mParticle dashboard, open your Braze connection settings. UnderPush Notification Service Worker File Location, type in/thirdParty/braze-push-worker.jsand clickSave.Warning- Setting a value here limits the scope of push notifications on your site. For instance, in the above example, because the service worker file is located within the/thirdParty/directory, asking for push notifications MAY ONLY BE CALLED from web pages that start withhttp://your-site-name.com/thirdParty/.
Create a âPrime for Pushâ in-app messaging Campaign on the Braze dashboard. Note that this is anIn-App MessagingCampaign, and not aPush Notificationmessaging campaign.
Make it a âModalâ In-App Message. Give it whatever text and styling you wish to present to the user (âCan we stay in touch?â).
Give the in-app message a Button 1 Text value of âOKâ (or whatever affirmative text you wish), and set the On-Click Behavior to âClose Message.â
Under the gear composer section, add a key-value pair. Give it a key ofmsg-idand a value ofpush-primer.
You can create aprime-for-pushcustom event (or name it whatever youâd like) from the Braze dashboard. While still in the Braze dashboard, create a trigger action of whatever your custom event is (ie,prime-for-push). In the mParticle Braze connection settings, fill in the"Soft Push" Custom Event Namewith your custom event name (ie.prime-for-push). When this field is filled, users will be sent the Soft Push Prompt on session load.
Optionally, you can change the name and location ofservice-worker.js. The following example will clarify the steps:Letâs say that you want to rename yourservice-worker.jsfile tobraze-push-worker.jsand store it in inside a directory in your root folder calledthirdParty/.In your mParticle dashboard, open your Braze connection settings. UnderPush Notification Service Worker File Location, type in/thirdParty/braze-push-worker.jsand clickSave.Warning- Setting a value here limits the scope of push notifications on your site. For instance, in the above example, because the service worker file is located within the/thirdParty/directory, asking for push notifications MAY ONLY BE CALLED from web pages that start withhttp://your-site-name.com/thirdParty/.
Optionally, you can change the name and location ofservice-worker.js. The following example will clarify the steps:
Letâs say that you want to rename yourservice-worker.jsfile tobraze-push-worker.jsand store it in inside a directory in your root folder calledthirdParty/.
In your mParticle dashboard, open your Braze connection settings. UnderPush Notification Service Worker File Location, type in/thirdParty/braze-push-worker.jsand clickSave.
Warning- Setting a value here limits the scope of push notifications on your site. For instance, in the above example, because the service worker file is located within the/thirdParty/directory, asking for push notifications MAY ONLY BE CALLED from web pages that start withhttp://your-site-name.com/thirdParty/.
Firefox - starting with version 72, Firefox requires user interaction before showing a full push permission dialogue box. Seeherefor more details.
Ensure that your OS-wide notifications for the browser you are testing are not disabled.
If you have previously allowed or rejected push requests while testing, you will need to clear local storage/cookies as well as the browserâs notification preference for your development URL for optimal testing.
As long as the Braze Kit is included in your app, mParticle will pass any Push Notifications from Braze to the kit for display. However, you will need to provide credentials in the Braze dashboard.
See the mainiOSandAndroidPush Notification documentation for more detail.
On iOS, when a user launches your app by tapping on a push notification, you may see these launches recorded in the mParticle dashboard but not in Braze. This happens due to a race condition between the Braze SDK initializing and the app handling the push notification.
To work around this, youâll need to create your own instance of Braze in yourapplicationDidFinishLaunchingmethod of your app delegate and pass it to the Braze kit before initializing the mParticle SDK. Youâll also need to tell the kit not to process push notifications and instead handle them yourself. This ensures that Braze is initialized and ready to receive the push notifications immediately upon app launch.
Note that by implementing your own instance of Braze, you will lose the ability to use the following Braze configuration options in the mParticle dashboard, as youâll be passing those options to Braze yourself on app launch. Only implement this if you need push notification app launches reported to Braze:
Braze API Key
Braze Endpoint
Braze SDK Request Policy
Braze SDK Flush Interval
Braze SDK Session Timeout
Braze SDK Minimum Time Interval Between Triggers
Braze SDK Disable Automatic Location Tracking
All other Braze configuration options in the mParticle dashboard will continue to work as usual, and any of the above can be set in your app when you create the Braze instance by setting the relevant options on the Braze configuration object. See the example code for thedidFinishLaunchingWithOptionsmethod below.
The following is mostly following the instructions fromBrazeâs âManual push integrationâdocumentation, with the addition of some mParticle specific code in thedidFinishLaunchingWithOptionsmethod.
Please note that because we are following BrazeâsâManual push integrationâinstructions, you should not set the configuration option,configuration.push.automation = true, as described in BrazeâsAutomatic push integrationdocumentation as it will cause conflicts.
Make sure to import the Braze SDK and mParticle Braze kit in your app delegate file.
Create and configure a Braze instance immediately upon app launch and pass it to the Braze kit.
Add the required push notification delegate methods
Location Tracking
The Braze kits foriOSandAndroidsupport Brazeâs automatic location tracking features, provided that the appropriate app-level permissions are granted by the user.
For Android push notifications you will need to provide your Server Key in your app settings page underPush Notification Settings.

For iOS push notifications you will need to upload your APNs Push SSL certificate to Braze. See theBraze documentationfor more.
Special Considerations for mParticle A/B Testing With Braze and the mParticle SDK
mParticle supports the ability to conduct A/B testing with different integrations by sending a sample of users and their data to one integration and a different sample of users and their data to a different integration.  If you are using the mParticle SDK for Braze deploymentandcalling Braze methods directly, when instrumenting with the mParticle SDKyou must ensure that the Braze kit is active in the App before calling a Braze method.  This is very important and ensures that you are not inadvertently calling Braze methods for apps/users that are not part of an Braze A/B sample.
Roku
mParticle supports the ability to forward server-side events for the Roku platform. Note that only data that includes your selected External Identity Type can be forwarded to Braze.
Data Processing Notes
mParticle will always forward events if sent via the mParticle SDK, provided you have included the Braze kit, but will only forward events sent via the mParticle S2S API if the following conditions apply:
The App Group REST API Key setting is specified.
Either your set External Identity Type, or a push token is specified.
Braze haslimits on the number of characters in a property key- they must be less than or equal to 255 characters, with no leading dollar signs. When forwarding via a client-side kit, mParticle will remove the dollar sign ($) when forwarding property keys for user attributes, custom, and e-commerce events. When forwarding server-to-server, mParticle will remove the dollar sign ($) from mParticle reserved attributes.
Braze Instance
Braze maintains several instances.   As part of theConfiguration Settings, you need to specify which one your data should be forwarded to.  You can tell yourBraze Instancefrom the URL of your Braze Dashboard.
Check with your Braze account manager if you are unsure which Braze instance you are using.
There is also the ability to specify a Custom instance, which allows you to specify separate endpoints for REST, SDK and Javascript.
Prerequisites
In order to activate the Braze integration, you will need your Braze App Identifier API key and your âApp Group REST API Keyâ if using the S2S API.
Sign into your Braze Account.
Click on Developer Console in the left navigation, then API Settings, Identification, and choose the Identifier for the platform youâre building to.
If you are sending data to mParticle via the S2S API, your âApp Group REST API Keyâ value is required.  Click on the Developer Console in the left navigation to get this value.

Event Data Mapping
Commerce Events
Depending on the setting value forBundle Commerce Event Data(seeConnection Settingsfor more), Commerce Events may be expanded based on the number of products, promotions, or impressions, respectively. Ex:
Iffalse, a single incoming event with 2 unique products/promotions/impressions would result in at least 2 outgoing Braze events.
Intrue, a single incoming event with 2 unique products/promotions/impressions would result in 1 outgoing event with a nestedproducts[],promotions[]orimpressions[]array, respectively.
Product-based Commerce Events
A purchase event is mapped and optionally-expanded to Braze purchase event(s) as described above.
In addition to theCommon Commerce Fields, the following information is also captured, if defined:
All other product-based commerce event types are mapped and optionally-expanded to Braze custom event(s) as described above. Note:
If expansion is active and itâs a refund, an additional event representing thetotalis also generated.
As such, all relevant product and transaction information is conveyed via thepropertiesfield.
In addition to theCommon Commerce Fields, the following information is also captured, if defined:
All product-based commerce events, regardless of type, capture these common fields in thepropertiesdictionary in the following way:
Note: For web kit data, in order to forward theTransactionId, you must include thetransactionAttributesas the fifth argument below. See ourAPI docsfor how to build transaction attributes.
Promotion-based Commerce Events
Whenpromotionsare expanded, eachpromotionis converted to its own outgoing Braze event.
Alternatively, if expansion isnât toggled,promotionsare included in a nested collection in a single outgoing Braze event.
Impression-based Commerce Events
Whenimpressionsare expanded, eachproductfrom eachimpressionis converted to its own outgoing Braze event.
Alternatively, if expansion isnât toggled,impressionsand their associatedproductsare included in a nested collection in a single outgoing Braze event.
Screen Views
Your screen view events will be passed to Braze using the screen name that you passed to ourlogScreenSDK method, as the event name.
If you are using automatic screen tracking in our Android SDK, the automatically-generated screen view events will be forwarded to Braze using the name of the associated Activity class.
Session Start / End
To send session start and end events for S2S to Braze, enable theForward Session Eventsconnection setting. After enabling this setting, session start and end events are forwarded to Braze as custom events with the namesSession StartandSession End. When available, session IDs are also sent in thesession_idproperty on all session starts and ends, screen view, and custom events.
However, note that mParticle SDK kits do not support session events, which are never forwarded with a kit, whether or notForward Session Eventsis enabled.
Custom Events
All custom events will be forwarded to Braze using the event name that you passed to yourlogEventSDK method.  All event attributes will be forwarded to Braze as Braze custom event properties using the attribute names you passed to yourlogEventSDK method as well.
Note: Braze documentation indicates that the following reserved keywords canât be used as custom event properties:
time
event_name
To learn more, visit the Braze documentation:
Android and FireOS
iOS (legacy)
Swift
User Attributes
The table below describes how the mParticle integration maps user attributes to Brazeâs profile attributes.
Braze advises tocoerce data typeson user attributes shared with Braze before sending Production volume data. This ensures that the custom attributes received by Braze are of the expected data type. This can impact segment building and triggering campaigns.  If incorrect data types are identified after data has been flowing, there can be extra work to true up the users with the legacy data type on those attributes.  To give Brazeâs type detection a better opportunity to evaluate data types properly, you can enable the following 2 Connection Settings:Enable API Custom Attribute Type DetectionandEnable Kit Custom Attribute Type Detection.
Enriched Attributes and Identities
By default, mParticle forwards all available user attributes and user identities to Braze, including attributes added during profile enrichment. You can disable this behavior in theConnection Settings.   Only data which is sent to Braze Server to Server can be enriched.
Subscription Groups
A User Attribute can be mapped to a Braze Subscription Group ID. Requests sent to mParticle containing the mapped User Attribute, with a validtrueorfalsevalue, will determine if the user in the request should be subscribed (true) or unsubscribed (false) from the group. This allows for dynamic subscription management based on user attributes.
To configure Subscription Group Mapping:
Create the Subscription Group in Braze, if it doesnât already exist.
Map the desired User Attribute to the Subscription Group ID in the mParticle dashboard.Note that the User Attribute must be sent to mParticle at least once before it is available for mapping.
Map the desired User Attribute to the Subscription Group ID in the mParticle dashboard.
Note that the User Attribute must be sent to mParticle at least once before it is available for mapping.
Send the mapped User Attribute on your event batch to mParticle with a boolean value.true: User will be subscribed to the Braze Subscription Group.false: User will be unsubscribed from the Braze Subscription Group.Other non-boolean values will be ignored.
Send the mapped User Attribute on your event batch to mParticle with a boolean value.
true: User will be subscribed to the Braze Subscription Group.
false: User will be unsubscribed from the Braze Subscription Group.
Other non-boolean values will be ignored.
Subscription Group Errors
A misconfigured Subscription Group mapping can affect how your data is forwarded to Braze. If you notice your Subscription Groups are not being updated, check the following:
Invalid Subscription Group ID: Ensure the mapped Subscription Group IDs are correct in your Connection Settings.
Deleted Subscription Group: If a Subscription Group is deleted in Braze, you must update or remove the mapping in the mParticle dashboard.
Invalid User Attribute: Ensure the mapped User Attribute is being sent to mParticle with a boolean value.
Please note that Braze will only return an error in these cases when the Subscription Group attribute update is theonlyitem in the request sent to Braze. If the request contains valid events and/or purchases, Braze will process these and skip the Subscription Group update. This also means that you will only see Subscription Group errors in theSystem Alertspage when the invalid Subscription Group update is theonlyitem in the request.
Consent
Braze uses the$google_ad_user_dataand$google_ad_personalizationcustom attribute keys to receive consent status for Googleâs EU User Consent Policy. The Boolean sent to these keys signify that a user has granted or denied consent to a marketer. As per theirCollecting consent for EEA, UK, and Switzerland end usersdocumentation, this value must be sent to Google as a Custom Attribute.
User-specified Consent
To configure user consent forwarding under this value, a mapping should be set-up leveraging mParticleâs notion of Consent Purposes. To learn more about handling user consent within mParticleâs platform, see the following docs:Data Privacy Controls.
Once a Consent Purpose is set up, user consent information can be associated with it in subsequent Event Batches. The Consent Purpose data mapping can then be configured for downstream forwarding via the Consent Mapping connection setting.
Configuration Settings
Connection Settings
Braze Web Kit Critical Updates and Timelines
Braze occasionally makes breaking changes to their SDK, so if you call Braze directly in your code, you will have to update your code to ensure your website performs as expected when updating versions of Braze.
Opt In to Braze SDK Version 5
We recommend you use version 5 of the Braze SDK.  You only need to make code changes if you directly call the Braze SDK from your code. Otherwise, you can simply selectVersion 5from the mParticle connection settings.
If you are upgrading from V3, you should check the breaking changes from theBraze V4 Changelogas well asBraze V5 Changelog, in addition to theV4/5 migration guideto learn about the breaking changes.  The most significant breaking changes are the replacement of theappboyclass name withbrazefrom V3 to V4, in addition to the removal and renaming of several APIs.  If you are updating from V4 to V5, there are fewer changes, but youâd follow the same defensive code recommendations below.
You can opt into the latest major version of the Braze Web SDK whether you implement mParticleâs Web SDK using npm or our snippet/CDN.
Customers who self-host mParticle via npm - You should add @mparticle/web-braze-kit version 5.0.0 or greater in your package.json.  You must also selectVersion 5underBraze Web SDK Versionin the Braze connection settings.
Customers who load mParticle via snippet/CDN - You must  selectVersion 5underBraze Web SDK Versionin the Braze connection settings.
Note that the following is only one example, and demonstrates an upgrade from V3 to V5.  Everywhere you manually callappboy(or other deprecated API) needs to be updated similar to the below. If you are using NPM, you can skip to step 4.  Please be sure to test your site fully in development prior to releasing.
Step 1: Legacy code sample. Find all the places where your code references theappboy.displaynamespace.  Braze has removed all instances of thedisplaynamespace:
Step 2: Roll out code changes to be used before you opt in to using Version 4 of the Braze Web SDK so that it works under both versions:
Step 3: Whether you are using the snippet or self-hosting, you need to navigate to your Braze connection settings and selectVersion 5from theBraze Web SDK Versiondrop down.
Step 4: After you opt in, you can simplify your code. We recommend testing and waiting at least 24 hours between opting in and removing previous instances ofappboyand doing thorough testing of your application in a development environment to ensure everything is working:
Step 4: Push Notifications via service-worker.js
If you use Push Notifications, we have updated theservice-worker.jsfile.  In our testing, Brazeâs push notifications work as expected regardless of what version of the service-worker is used, but we recommend updating this file to ensure future compatibility.  In yourservice-worker.jsfile, update the code to referencehttps://static.mparticle.com/sdk/js/braze/service-worker-5.5.0.jsinstead ofhttps://static.mparticle.com/sdk/js/braze/service-worker-3.5.0.js.  Yourservice-worker.jsfile should now contain:
Transition from @mparticle/web-appboy-kit to @mparticle/web-braze-kit
The legacy @mparticle/web-appboy-kit from NPM includes version 2 of the Braze Web SDK.  As part of this update, weâve created a newBraze web kit repoto replace our deprecatedAppboy web kit repo.  If you are still using@mparticle/web-appboy-kit, you will need to consider the breaking changes Braze made between V2 and V3 of the Braze SDK (foundhere) as well as the instructions above to get from V2 to V5 of the Braze SDK.

URL: https://docs.mparticle.com/integrations/appsflyer/event
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Event
AppsFlyeris a leading Mobile Attribution & Marketing Analytics platform that allows app marketers to easily measure the performance of all their marketing channels - paid, organic and social - from a single real-time dashboard.
mParticleâs integration with AppsFlyer includes a required Kit integration and an optional server-side integration. The Kit forwards event data from your app to AppsFlyer on the client side, and also handles app install attribution, uninstall tracking, and deeplinking, including deferred deeplinking. Supplementary data from outside your app can be forwarded to mParticle via our Events API and sent on to AppsFlyer server-to-server.
Consent
Google has several notions of user-provided consent.  Two of these apply to AppsFlyer events:ad_user_dataandad_personalization. These represent consent forad user dataandad personalization.
User-specified Consent
To configure user consent forwarding under this value, a mapping should be set-up leveraging mParticleâs notion of Consent Purposes. To learn more about handling user consent within mParticleâs platform, see the following docs:Data Privacy Controls.
Once a Consent Purpose is set up, user consent information can be associated with it in subsequent Event Batches. The Consent Purpose data mapping can then be configured for downstream forwarding via the User Consent Data Mapping connection setting.
Consent Defaults
In the absence of a user-defined consent value for thead_user_dataandad_personalizationfields via the Consent Purpose mapping, a default value can be optionally configured via a separate drop-down setting for each consent type. When no user consent is provided, the default status is used, if specified.
Caution: It is recommended that in the long term, you set up user-specified consent through the Consent Purpose mapping, such that the user consent is correctly forwarded to Google. It is your responsibility as a Data Controller to stay compliant under the GDPR, and set up user consent collection for downstream forwarding. The consent default setting can be deprecated in the future.
Enabling AppsFlyer
1. Configure
Add the mParticle SDKs to your iOS and/or Android apps. See the docs foryour platform here.
Connect your iOS and/or Android workspaces to AppsFlyer. You will need to provide your Dev Key, which you can access from the Settings page of your organizationâs AppsFlyer dashboard. For an iOS connection, you will also need your Apple App ID. Make sure you remove the âIDâ prefix. For example, if your App ID isid12345, just enter12345. For more information on setting up a new mParticle connection, see thePlatform Guide.
Configuration Settings
Connection Settings
2. Add the iOS/Android Kits
mParticleâs AppsFlyer integration requires that you add the AppsFlyer Kit to your iOS or Android app. Just by adding the binary to your app:
The mParticle SDK will initialize AppsFlyerâs SDK per their documentation, using the AppsFlyer dev key provided above, and will also forward all requiredUIApplication(iOS) andActivity(Android) lifecycle events to the AppsFlyer SDK.
Events that you log via mParticleâs API will be automatically mapped onto AppsFlyer analogous event tracking APIs.
The customer ID and email of the current user, set via mParticleâs Identity APIs, will be mapped onto AppsFlyerâs analogoussetUserAPIs.
Google Play Install Referrer will be forwarded (Android only - see below).
mParticle publishes the AppsFlyer Kit as separate iOS and Android libraries which have a transitive dependency on the mParticle core libraries. You can add them to your app via Carthage, Cocoapods, Swift Package Manager, or Gradle:
Refer to theApple SDKandAndroid SDKguides to read more about kits.
3. Install Referrer (Android only)
AppsFlyerâs SDK requires the forwarding of the Google Play Install Referrer Intent. The AppsFlyer kit will take care of this for you as long as youâve added mParticleâsReferrerReceiverto you manifest, or you are manually forwarding the Intent to ourReferrerReceiverclass. The mParticle SDK will then forward the Install Referrer intent to each configured kit, including AppsFlyer.
Please see theAndroid SDK setup guideto ensure your manifest is configured properly.
Deep Linking and Attribution
The AppsFlyer SDK exposes client-side deep linking and attribution APIs, all of which are supported by the mParticle AppsFlyer kit and are covered in this section. The core use-cases are:
Retrieving install attribution information (deferred deep linking)
Retrieve app-open attribution information (non-deferred deep linking)
OneLink, AppsFlyerâs unified deeplinking hosting service
Each platform has very specific requirements to ensure that the above functionality is supported. The minimum requirements are:
Verify the AppsFlyer connection is enabled for the workspace key and secret, and mParticle environment (development or production) that youâre testing.
Verify that thedevKeyconfigured above matches your AppsFlyer app.
Verify that you have correctly configured your Apple App ID (retrieve from iTunes connect, this isnotyour iOS development team prefix) both in AppsFlyer and in mParticle.
Verify that the proper associated domains and entitlements are configured (iOS only)
Verify that yourAndroidManifest.xmlhas the proper Intent Filters to match any deep link domains that youâre testing.
Retrieving Attribution Information
mParticleâs SDKs will automatically initialize the AppsFlyer SDK, forwarding the requiredUIApplicationlifecycle events and thecontinueUserAcivityevents for iOS and Android, as well as registering a delegate such that you can retrieve deep linking and attribution parameters on the client-side to customize your userâs in-app experience.
Specifically, the AppsFlyer SDK exposes one distinct callback:
didResolveDeepLink
mParticleâs API includes a wrapper for this callback, and both the iOS and Android kits expose a constant to inform you when the callback has been fired and if it was successful. On both platforms, the iOS/Android kit will register a delegate/callback with the AppsFlyer SDK on initialization and for the lifetime of the appâs process, and will call your completion handler block (iOS) orAttributionListener(Android) whenever there is new conversion data available.
When a user clicks a OneLink link, the AppsFlyer SDK retrieves available OneLink data from the AppsFlyer servers. Then, the UDL API calls thedidResolveDeepLink()method which returns aDeepLinkResultobject containing a status and (if successful) aDeepLinkobject containing thedeep_link_valueanddeep_link_sub1-10parameters you can use to customize the resulting in-app outcome.
However, when users deep link directly using universal or app links, thedidResolveDeepLinkmethod returns the full link unparsed since the app opens directly without going through AppsFlyer first. You can read more about AppsFlyerâs deep linking methodshere.
The parameters returned in these results will match the result of the AppsFlyer SDK, as documented forAndroidandiOS.
See the deep linking documentation foriOSandAndroidfor more information.
Test Scenarios
The following core test scenarios that should be verified:
New user-install (deferred deeplink)
Application not running, and an existing user-install invokes a deep link (âcold startâ scenario)
Application running in the background, and an existing user install invokes a deep link (âwarm startâ scenario)
Track Events
The AppsFlyer Kit will forward app events and eCommerce events to AppsFlyer.Custom Mappingsare available to map your custom app events ontoAppsFlyerâs event names. Refer to the iOS and Android SDK docs for details on instrumenting your app for event tracking:
eCommerceiOS SDKAndroid SDK
eCommerce
iOS SDK
Android SDK
App EventsiOS SDKAndroid SDK
App Events
iOS SDK
Android SDK
Note that AppsFlyer enforces alimit of 45 charactersfor event names.
Kit Source and Sample Applications
The source code for each kit, as well as sample apps, are available on Github:
iOS
Android
Server Integration
mParticle can forward app events and commerce events received via ourEvents APItoAppsFlyerâs server-API. Note that AppsFlyer requires data to be linked to a unique AppsFlyer ID, generated client-side by the AppsFlyer Kit. mParticle stores the AppsFlyer ID in its internal user profile. This means that:
You must have the AppsFlyer Kit included in your app to be able to forward data, and you can only forward data associated with your app users.
The data you send server-side must include a device ID, so that mParticle can lookup the AppsFlyer ID for the user.
iOS 14 Update for ApplicationTrackingTransparency
For iOS 14, mParticle will send theattfield based on theatt_authorization_statusto AppsFlyer in their expectedformat. Check theiOS14 Implementation guidefor more information.
Ifatt_authorization_statusis available:

URL: https://docs.mparticle.com/integrations
Documentation
Integrations
Connect your customer data to the leading marketing, analytics, and data warehousing solutions with just a few clicks.
Note: New Partners, pleaseregister.

URL: https://docs.mparticle.com/integrations/facebook/audience
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Audience
The mParticle Facebook Audiences integration allows you to forward mParticle audience data directly to a Facebook Ads Manager account for use with Facebook Custom Audiences, making it easy to target existing or prospective customers.
Prerequisites
Access to a Facebook Ad account
You must have Full Access to the Facebook Ads account you want to forward your audience data to. To check if you have Full Access:
Log into the Meta Business Suite atbusiness.facebook.com
Select the Meta business portfolio you want to send your audience data to.

Go toSettings > Accounts > Ad Accounts, and select the Ad account you want to use. ClickAd account access.
Under âPeople with full controlâ, look for the Facebook account you plan to use when setting up the mParticle integration.
To assign full access to someone, clickManagenext to their name. You can also assign a new account access by clickingAssign peopleand selecting their name from the list of people with access to your Meta Business portfolio.

Accept the Facebook Audiences Terms of Service
The Facebook Ads account you are connecting to must have accepted the following terms of service:
Custom Audiences Terms of Service
Value Based Custom Audience Terms of Service
Web Custom Audience Terms of Service
To see if youâve accepted the terms of service:
Log into your Facebook Ad account atadsmanager.facebook.comand clickAudiencesin the left nav bar.
Make sure that you have the correct ad account selected using the dropdown menu in the top right.
You should be prompted to accept the Facebook Audience terms of service. If you already have accepted these terms of service, you will be presented with the options to create new audiences:

Access to your Facebook Application ID
If you want to forward usersâ Facebook IDs with your audience data, you must have the Facebook Application ID number for your app or integration. To find your Facebook Application ID, you need to access the Facebook Developer Dashboard. To find your Facebook App ID:
Visit the Meta for Developers website athttps://developers.facebook.com/and log in with your Facebook account credentials.
ClickMy Appsin the top nav bar.
Under the list of apps on your dashboard, you can find your App ID listed under the name of your app:

Once you have satisfied the prerequisites described above, follow the steps below to set up the mParticle Facebook audience integration.
Facebook audience integration setup instructions
Setting up and using the audience integration for Facebook includes three stages:
Creating a Facebook audience output in mParticle.
Connecting an audience in mParticle to Facebook.
Finding your new mParticle audiences in Facebook for use in a campaign.
1) Create Facebook audience output
Log into your mParticle account atapp.mparticle.com, and navigate to theIntegrations Directory.
Search for âFacebookâ, hover your cursor over the Facebook tile, and clickSetup.

Check the box labeledAudience, and clickConfigure.

Under Account Credentials, clickLog In. This opens a separate window where you can connect your Facebook account to mParticle. ClickConnect.

Enter a descriptive name under Configuration Name.
Use theFacebook Account IDdropdown menu to select the Facebook account that is tied to the Facebook Ads account you want to forward your audiences to.

ClickSave & Open in Connections.
2) Connect an audience to Facebook
If you just completed step 1.7, then you will be brought toAudiences > Real-timein mParticle. Otherwise, from your mParticle account, navigate toAudiencesin the left-hand navigation and select eitherReal-timeorStandard.
From the list of audiences, find the one you want to forward to Facebook and click the âplus signâ+button under Connected Outputs.

ClickConnect Output.

SelectFacebook, and use the Configuration Name dropdown menu to select the new configuration you want to send your audience to. ClickNext.

Toggle theConnection Statusto eitherInactiveorActive. Only active connections will forward audiences. After completing the setup process, it may take up to 24 hours for your audience data to fully populate in Facebook.
Enter your Facebook Application ID. This is only required if you intend to forward Facebook IDs in the next step.
Check the box next to each of the following user identities you want to forward to Facebook with your audience:Email address (hashed as SHA256)Phone number (hashed as SHA256)Facebook IDApple IDFAGoogle GAID
Check the box next to each of the following user identities you want to forward to Facebook with your audience:
Email address (hashed as SHA256)
Phone number (hashed as SHA256)
Facebook ID
Apple IDFA
Google GAID
Email addresses and Facebook IDs result in higher match rates with Facebook users because they are more unique across the Facebook platform, so itâs recommended to use these identities whenever they are available.

CheckEnable Multi-Key Audienceto have an additional audience forwarded to Facebook that includes all of the user identities you selected in the previous step.mParticle creates a new custom audience in your Facebook Ads Manager for each identity that you select. For example, if you select both phone and email, you will see two new custom audiences added: one using user phone numbers and one using their email addresses. If you enableMulti-Key Audiences, you will still see a separate audience for each identity, but you will also see an additional audience that includes all of the identities you selected.
CheckEnable Multi-Key Audienceto have an additional audience forwarded to Facebook that includes all of the user identities you selected in the previous step.
mParticle creates a new custom audience in your Facebook Ads Manager for each identity that you select. For example, if you select both phone and email, you will see two new custom audiences added: one using user phone numbers and one using their email addresses. If you enableMulti-Key Audiences, you will still see a separate audience for each identity, but you will also see an additional audience that includes all of the identities you selected.
CheckMatch on User Attributesto have mParticle forward all available attributes from the following list for each user. This can increase the match rate for your audience. All user attributes are hashed asSHA256before being forwarded to Facebook.GenderFirst nameLast nameCityStateCountry
CheckMatch on User Attributesto have mParticle forward all available attributes from the following list for each user. This can increase the match rate for your audience. All user attributes are hashed asSHA256before being forwarded to Facebook.
Gender
First name
Last name
City
State
Country
To create a value-based lookalike audience, checkIs Value Based Audience, and use the User Attribute Representing Value dropdown menu to select an mParticle user attribute to forward to Facebook.The attribute you select is what Facebook refers to when determining the relative value of a user, and whether or not to include it in the audience. Users with higher values for this attribute are considered more valuable.To allow attributes with a value of 0 to be forwarded, checkAllow Zero Values. Negative values are never forwarded.
To create a value-based lookalike audience, checkIs Value Based Audience, and use the User Attribute Representing Value dropdown menu to select an mParticle user attribute to forward to Facebook.
The attribute you select is what Facebook refers to when determining the relative value of a user, and whether or not to include it in the audience. Users with higher values for this attribute are considered more valuable.
To allow attributes with a value of 0 to be forwarded, checkAllow Zero Values. Negative values are never forwarded.
UnderCustomer File Source, select one of the following as the source of your audience data:Directly from customers: all audience data was collected directly from the audience membersCustomers and partners: the audience data was collected both from audience members and from a partner, like a third-party agencyDirectly from partners: the audience data was collected only from third-party partners
UnderCustomer File Source, select one of the following as the source of your audience data:
Directly from customers: all audience data was collected directly from the audience members
Customers and partners: the audience data was collected both from audience members and from a partner, like a third-party agency
Directly from partners: the audience data was collected only from third-party partners
Select the identity you want to forward to Facebook as an external email address from theExternal Email Identity Typedropdown.Including an external email address can help improve your match rate in Facebook.
Select the identity you want to forward to Facebook as an external email address from theExternal Email Identity Typedropdown.
Including an external email address can help improve your match rate in Facebook.
Select the identity you want to be hashed and forwarded to Facebook for use as an external unique ID from theMulti-Key External ID Typedropdown.This can be any unique ID, like an advertising ID, loyalty membership ID, user ID, or even a cookie ID, and can help increase your audienceâs match rate.
Select the identity you want to be hashed and forwarded to Facebook for use as an external unique ID from theMulti-Key External ID Typedropdown.
This can be any unique ID, like an advertising ID, loyalty membership ID, user ID, or even a cookie ID, and can help increase your audienceâs match rate.
ClickAdd Connection.
3) Find your new mParticle audience in Facebook
To find your new custom audience(s):
Navigate to your Facebook Ads Manager atadsmanager.facebook.comand log in.
Select the business portfolio containing the ad account that you used when setting up your audience connection using the left-hand navigation.
In the left-hand navigation, clickAudiences.
After creating and activating your audience connection between mParticle and Facebook, you will see one or more (depending on your configuration settings) custom audiences added to your Audience list in Facebook Ads Manager.

To edit, share, or create an ad for one of your custom audiences, click the audience name from the list to view the details panel. From the details panel, click theActionsdropdown menu. Certain actions may be unavailable due to missing payment info or a compliance requirement that hasnât been configured yet for your Ads account.

Deleting an audience
mParticle deletes the downstream audience when you delete an audience from mParticle.
Supported identities
Following are the user identities and device identities that can be forwarded to Facebook. Identities that are hashed asSHA256are noted.
Facebook ID
Email address (SHA256)
Phone number (SHA256)
Apple IDFA (SHA256)
Google Advertising ID (SHA256)
Android Device ID (SHA256)
Understanding your match rate
The âmatch rateâ for a Facebook audience refers to the percentage of your forwarded user data that Facebook successfully matches to active Facebook users.
When you connect an mParticle audience with Facebook, several user identifiers are included for each audience member (such as email addresses, phone numbers, Facebook user IDs, or mobile advertiser IDs). After you send an audience from mParticle to Facebook, Facebook attempts to match these identifiers to user profiles on Facebook. The match rate indicates how successful Facebook is in finding corresponding user profiles for the identifiers you provided.
There are several factors that can impact your match rate:
Data quality: more accurate, up-to-date, and complete user data leads to a higher match rate.
Privacy settings: Facebook users with stricter privacy or data sharing settings may also impact your match rate.
Identifiers used: certain identifiers, like email addresses and Facebook user IDs, have higher match rates due to their uniqueness.
Audience size: larger audiences have higher match rates because of the increased chance in finding matches within the set of Facebook users. Facebook suggests a minimum audience size of 1,000 people for best results.
A higher match rate means that more of your user data was successfully matched to Facebook users, allowing you to reach a larger audience with your ads or other marketing efforts. However, itâs important to keep in mind that not all of your user data may match with Facebook users, and the match rate may vary from one audience to another.
Value-based audiences
You can use the mParticle audiences integration to create value-based lookalike audiences. These audiences target users who share similar characteristics and behaviors with your existing high-value customers.
However, unlike traditional lookalike audiences, which are based solely on demographic or interest similarities, value-based lookalike audiences are generated using an attribute that reflects the monetary value or profitability of your customers. For example, if you select a lifetime value attribute, Facebook will create a lookalike audience composed of users that have a higher lifetime value.
By default, mParticle only forwards users in a value-based audience to Facebook if the value of their âvalue reprepresenting attributeâ is greater than 0. You can include values equaling zero by checkingAllow Zero Valueswhen creating your value-based audience.
You can learn more about value-based lookalike audiences inFacebookâs documentation.
Customer File Source Requirements
As of July 2, 2018, Facebook requires that all new audiences disclose whether their data was collected from customers directly, collected from partners, or both. You can provide this information in the connection settings when connecting an audience to Facebook via the Customer File Source setting.
You can learn more about the Customer File Source Requirement inFacebookâs documentation.
Data forwarding
Limits
Facebook does not allow more than500 custom audiencesto be created per Facebook Ads account. If you attempt to forward more than 500 audiences to Facebook, an error will be returned.
Upload frequency
The Facebook Audience integration uses bulk forwarding. This means that instead of forwarding audience data in real time, mParticle adds updates to a queue. By default, mParticle forwards data to Facebook from this queue whenever one of the following conditions is met:
3 hours have passed since the last update
At least 75,000 messages are in the queue
Verify and troubleshoot your connection
Before activating your new connection, or when troubleshooting issues, please be aware of the following:
Are you forwarding audience data to the correct Facebook Ads account?
During steps 4-5 of the first stage of the setup process, you connect your Facebook account to mParticle. Make sure that you use a Facebook account that has been granted access to the Facebook Ads account you will forward your audiences to, and make sure that after connecting your Facebook account that you use theFacebook Account IDdropdown menu to select the Facebook Ads account.
It is possible to have access to multiple Ads accounts, so make sure that you selected the correct Ads account when creating your output.
ReadAccess to a Facebook Ads accountfor instructions on how to make sure your Facebook account has the correct access. If you do not have the correct access, reach out to your Facebook Ads account administrator.
If you are forwarding Facebook IDs, did you add the correct Facebook app ID?
If you are trying to forward Facebook IDs from mParticle to Facebook, you must provide your Facebook application ID.
Often referred to as an app ID, a Facebook Application ID is a unique ID assigned to your application when you register it on the Facebook Developers platform. This App ID is required to integrate your application with various Facebook functions, such as logging in through Facebook, accessing Facebookâs Graph API, or incorporating social plugins like the Like button.
SeeAccess to your Facebook Application IDfor instructions on how to find your application ID.
Data latency
While you may see your forwarded mParticle audiences listed in Facebook Ads right away, it can take up to 24 hours before your audience data begins to fully populate. This time can vary depending on how large your audiences are.
When looking for your audience data in Facebook, select the correct Business Portfolio
After logging into Facebook Ads Manager, make sure that you select the correct Business Portfolio from the left-hand navbar. You should select the Business Portfolio containing the Ads Account you chose to forward your audiences to.
Forwarding multi-key audiences to Facebook creates multiple audiences
When you select more than one user identity to forward to Facebook, a separate audience will be created in Facebook for each identity you select. If you want to have a single audience containing all of the identities you selected, make sure that you checkEnable Multi-Key Audienceswhen connecting your audience to Facebook.
However, even with multi-key audiences enabled, you will still see an additional audience in Facebook for each identity selected.
Settings reference
Configuration Settings
Connection Settings

URL: https://docs.mparticle.com/integrations/snapchat/audience
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Audience
Snap is a camera company whose flagship application Snapchat, the Spectacles product, and a variety of publisher tools provide brands a unique platform to reach targeted audience segments with engaging and personalized content.
Prerequisites
In order to enable the mParticle integration with Snapchat you will need the account credentials for a Snapchat account.  The integration activation process will prompt you to log into your Snapchat account, and once logged in, mParticle will automatically retrieve the credentials that it needs to forward audience data to Snapchat. If you intend to use the optional Value Based Audience feature, you will need to request Snap to enable the feature for your ad account and ensure they complete such request before you create a Value Based Audience connection in mParticle.
Activate Snapchat
Select Directory, and click the Snapchat tile.
ClickAdd Snapchat to Setup.
Select theOutput AudienceIntegration Type and clickAdd to Setup.
Select theSnapchatoutput configuration group and clickConfigure.
ClickLogin to Snapchat- A pop-up window will appear allowing you to enter your account credentials to access your Snapchat account.

Enter a Configuration Name.
Select your Account Credentials and clickSave.
ClickAcceptto authorize mParticle to access your Snapchat account.

You can now connect your audiences to Snapchat.
Data Processing Notes
Minimum- An audience is selectable for targeting in Snapchat as long as it has a minimum of 1000 users.
Snapchat has a limit of 1000custom audiencesper ad account.
User Identity Mapping
When forwarding audience data to Snapchat, mParticle will send SHA-256 hash of the following identities based on the values of the Connection Settings:
Emails
Device IDs (IDFA or Google Advertising ID)
Phone Numbers (Mobile Telephone Number, Phone Number 2, Phone Number 3, and$mobilereserved user attribute)
Upload Frequency
The Snapchat Audience Integration uses Bulk Forwarding. Bulk Forwarding means that, instead of uploading updates to an audience in real time, mParticle compiles updates into a queue until either a given amount of time has passed since the last upload, or until a certain number of updates are waiting to be sent.
By default, mParticle uploads to Snapchat whenever at least one of the following conditions is met:
3 hours have passed since the last update.
At least 500000 messages are in the queue.
Upload frequency can sometimes be adjusted. Reach out to your mParticle Customer Success Manager if you need to discuss upload frequency.
Deleting an Audience
When you delete a connection or audience, the downstream segment in Snap will be deleted.
Value-based audiences
You can use the mParticle audience integration to create value-based audiences with Snap. As a prerequisite, Snap must enable value-based audience support for your ad account.
By default, mParticle will forward all users in a value-based audience to Snap even if their user attribute representing value is missing or negative. You can exclude users with negative, missing, and zero values by unchecking theAllow Zero And Negative Valuesconnection setting when creating your value-based audience.
Connection Settings

URL: https://docs.mparticle.com/integrations/twitter/audience
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Audience
mParticleâs Twitter Tailored Audience integration enables app owners to push audiences created in Audience Manager to Twitter. Once the integration is activated and your audience is pushed to Twitter, you can then target Promoted Tweets to your Tailored Audiences for engagement, cross-promotion, exclusion targeting or monetization use cases.
Prerequisites
In order to enable audience forwarding to Twitter, you will need the account credentials for a Twitter account that is linked to your appâs Twitter Ads account.  The integration activation process in Audience Manager will prompt you to log into your Twitter account, and once authorized, mParticle will automatically retrieve the credentials that it needs to forward audiences to Twitter. The account you login with will need a permission level of Account Administrator to connect an affiliated Ad Account.
Data Processing Notes
Timing- Real Time Audiences are activated for targeting in near real time, however please note that the true estimate for the audience size may still take up to 60 hours.  It is possible to view audience status in the Ads UI via âAudience Managerâ dashboard.
Activate the Integration
Add the Twitter Audience integration to your setup from the Directory.
FromSetup > OutputsAdd a new Twitter Audience Configuration.
Log into Twitter from the popup, select your advertising account and clickSave.
From your audienceâsConnectpage, add Twitter as an output and select the configuration you created. You can choose whether or not to forward emails, Twitter handles and device IDs to Twitter. ClickAdd Connectionto finalize the connection.
User Identity Mapping
Depending on the Configuration Settings that you select (see below), Twitter will use one or more of the following IDs to match users:
Email address
Twitter handle
Device IDs (IDFA for Apple OS, Google Ad ID for Android)
mParticle sends these IDs as a SHA-256 hash.
Deleting an Audience
mParticle deletes the downstream audience when you delete an audience from mParticle.
Configuration Settings
Connection Settings
Additional Information
For more information about advertising through Twitter, seeTwitter Business.

URL: https://docs.mparticle.com/integrations/braze/audience
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Audience
Brazeis a comprehensive customer engagement platform that powers relevant experiences between consumers and brands they love. Braze helps brands foster human connection through interactive conversations across channels.
mParticle audiences correspond to BrazeâsSegmentsfeature and can be used to target engagement campaigns in Braze.
Prerequisites
In order to activate our Braze integration, youâre going to need theAPI keyfor each app that youâd like to set up, which can be found by logging into your Braze account and navigating to your appâs settings. You will also need to create anApp Group REST API Keyin the Developer Console.
Braze Instance
Braze maintains several instances. As part of theConfiguration Settings, you need to specify which one your data should be forwarded to.  You can tell yourBraze Instancefrom the URL of your Braze Dashboard.
Check with your Braze account manager if you are unsure which Braze instance you are using.
There is also the ability to specify a Custom instance, which allows you to specify separate endpoints for REST, SDK and Javascript.
User Identity Mapping
mParticle will attempt to match users in Braze based on IDFAs, Android Device IDs, and a customizableExternal User ID field, which uniquely identifies a user in Braze. You can set which Identity Type to use as the External User ID in theConfiguration Settings. Your External User ID should be a unique, permanent identifier â usually Customer ID or Email. If you are also using theEventintegration, make sure you set the same External User ID across both integrations.
Forwarding Audiences
The Braze API does not allow mParticle to directly create and maintain membership of segments in Braze, so the Audience integration works by setting attributes on a user, which you can then use todefine a corresponding segment in Braze. Like mParticle, Braze populates itâs Segment Manager based on the actual data points received, so you need to create audiences in mParticle and connect them to Braze first. Then, provided your audience is not empty, the segment membership attributes should become available in the Braze Segment Manager within a few minutes.
mParticle offers seven ways to set segment membership attributes, controlled by theSend Segments AsConfiguration Setting. The drop-down has the following options:
Single String Attribute (default)
Single Array Attribute
One Attribute Per Segment
Both Single Array Attribute and Single String Attribute
Both Single Array Attribute and One Attribute Per Segment
Both Single String Attribute and One Attribute Per Segment
Single Array Attribute, Single String Attribute, and One Attribute Per Segment
These options will be explained in further detail below.
Sample Audience Membership
Note that Audience IDs can be found in the main Audience list view.

For example, note the Audience IDs for these three audiences:
13053
13052
13051
Single String Attribute
This is the default behavior.  mParticle creates a single custom attribute in Braze for each user, calledSegmentMembership. The value of this attribute is a comma-separated string of mParticle audience IDs that match the user.
Using the above examples, a user who is a member ofTest Audience 1,Test Audience 2, andTest Audience 3will show the attributeSegmentMembershipwith a value of"'13053','13052', '13051'"in Braze.
See theSample Braze Profilefor an example.
To target members ofTest Audience 1, for example, you need to create a matching segment in Braze using the mParticle Audience ID,
with the filterSegmentMembershipâmatches regexâ13051. Itâs important to choose thematches regexoption, and notequals, or users with membership in more than one audience will not be matched.

Single Array Attribute
mParticle creates a single custom array attribute in Braze for each user, calledSegmentMembershipArray. The value of this attribute is an array of mParticle audience IDs that match the user.
Using the above examples, a user who is a member ofTest Audience 1,Test Audience 2, andTest Audience 3will show the attributeSegmentMembershipArraywith a value of["13053","13052", "13051"]in Braze. Note, however, that Braze parses array attributes to make them more readable.
See theSample Braze Profilefor an example.
To target members ofTest Audience 1, for example, you need to create a matching segment in Braze with the filterSegmentMembershipArrayâincludes valueâ13051

One Attribute Per Segment
mParticle creates a custom attribute in Braze for each audience that a user belongs to, based on the External Name of the audience.
Using the above examples, a user who is a member of audienceTest Audience 1will show the attributeIn Test Audience 1istruein Braze.
To target members ofTest Audience 1, for example, you need to create a matching segment in Braze with the filterIn Test Audience 1âequalsâtrue.

Both Single Array Attribute and Single String Attribute
mParticle will send attributes as described by bothSingle Array AttributeandSingle String Attribute.
Both Single Array Attribute and One Attribute Per Segment
mParticle will send attributes as described by bothSingle Array AttributeandOne Attribute Per Segment.
Both Single String Attribute and One Attribute Per Segment
mParticle will send attributes as described by bothSingle String AttributeandOne Attribute Per Segment.
Single Array Attribute, Single String Attribute, and One Attribute Per Segment
mParticle will send attributes as described bySingle Array Attribute,Single String AttributeandOne Attribute Per Segment.
Sample Braze Profile
Here is a sample Braze profile with all options enabled.
Deactivating and Deleting Connections
Since mParticle does not directly maintain segments in Braze, it will not delete segments when the corresponding mParticle audience connection is deleted or deactivated. When this happens, mParticle willnotupdate the audience user attributes in Braze to remove the audience from each user.
Deleting an Audience
Deleting an audience does not remove the custom attributes in Braze.
Configuration Settings

URL: https://docs.mparticle.com/integrations/pinterest/audience
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Integrations
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Feed
Event
Cookie Sync
Platform SDK Events
Server-to-Server Events
Audience
Audience
Audience
Event
Audience
Audience
Event
Feed
Feed
Event
Event
Feed
Event
Event
Audience
Data Warehouse
Event
Audience
Event
Event
Event
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Forwarding Data Subject Requests
Event
Feed
Event
Event
Forwarding Data Subject Requests
Feed
Event
Event
Event
Feed
Event
Event
Audience
Event
Audience
Event
Event
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Forwarding Data Subject Requests
Feed
Event
Audience
Feed
Forwarding Data Subject Requests
Event
Event
Audience
Event
Audience
Feed
Event
Feed
Audience
Event
Feed
Event
Event
Audience
Feed
Event
Feed
Forwarding Data Subject Requests
Event
Audience
Event
Custom Feed
Event
Feed
Audience
Event
Feed
Data Warehouse
Event
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Event
Audience
Event
Audience
Event
Event
Event
Event
Event
Event
Feed
Feed
Audience
Audience
Audience
Audience
Event
Event
Event
Audience
Event
Audience
Data Warehouse
Event
Cookie Sync
Audience
Event
Event
Event
Event
Event
Feed
Feed
Event
Event
Event
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Event
Audience
Feed
Audience
Feed
Event
Audience
Audience
Event
Event
Audience
Event
Event
Event
Audience
Event
Event
Forwarding Data Subject Requests
Feed
Feed
Event
Feed
Audience
Audience
Event
Audience
Event
Audience
Event
Event
Audience
Feed
Audience
Event
Event
Audience
Audience
Audience
Audience
Event
Audience
Audience
Event
Forwarding Data Subject Requests
Audience
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Feed
Event
Event
Audience
Event
Feed
Event
Event
Event
Audience
Event
Event
Audience
Event
Feed
Audience
Inbound Data Subject Requests
Event
Event
Feed
Event
Audience
Event
Audience
Event
Audience
Event
Feed
Audience
Event
Event
Event
Event
Audience
Event
Feed
Audience
Event
Event
Audience
Event
Event
Feed
Event
Feed
Audience
Event
Audience
Event
Audience
Feed
Event
Audience
Event
Event
Audience
Event
Event
Event
Feed
Audience
Feed
Audience
Feed
Custom Pixel
Feed
Event
Feed
Event
Event
Event
Event
Audience
Event
Event
Audience
Event
Event
Event
Event
Feed
Event
Data Warehouse
Event
Audience
Audience
Feed
Event
Audience
Event
Audience
Event
Feed
Loyalty Feed
Event
Feed
Audience
Audience
Event
Audience
Audience
Audience
Cookie Sync
Event
Feed
Audience
Audience (Deprecated)
Event
Audience Migration
Audience
Event
Event
Audience
Event
Audience
Event
Audience
Audience
Event
Audience
Event
Event
Event
Event
Cookie Sync
Audience
Audience
Cookie Sync
Feed
Audience
Event
Feed
Event
Event
Audience
Event
Audience
Pinterest - Reach people who are using Pinterest to discover and plan the things they want to do in the future.  Using the Ads API, businesses on Pinterest manage, scale and optimize their Promoted Pins.
Prerequisites
In order to enable mParticleâs integration with Pinterest, you need to have abusiness accountwith Pinterest, and the account credentials for the Pinterest account.  The integration activation process in Audience Manager will prompt you to log into your Pinterest account, and once authorized, mParticle will automatically retrieve the credentials that it needs to forward audiences to Pinterest.
If you are not working with a Pinterest Marketing Developer Partner, contactadvertiser-data-onboarders@pinterest.comand CC your Pinterest account team requesting access to the Pinterest API.
Data Processing Notes
Timing- An audience named<Audience Name>-EMAILand<Audience Name>-MAIDwill be available in Pinterest upon activating a subscription in mParticle, however it may take up to 24 hours before the size of the audience is shown in Pinterest.
Minimum- An audience is selectable for targeting in Pinterest as long as it has a minimum of 100 users.  If an audience is selected while in the processing state, and later is calculated to be less than 100 users, the campaign will not serve.
Maximum- There is a limit of 300 million users in an audience.  This is a count of the raw number of records that mParticle has sent to Pinterest.  If an audience reaches this limit, mParticle will no longer send user updates to Pinterest.
Additional Notes- If an email or device ID is added to an audience, and is not currently a Pinterest user, the user will not be added to the audience even if the user later becomes a Pinterest user.
User Identity Mapping
When forwarding audience data to Pinterest, mParticle will send SHA-1 hash of IDFAs, Google Advertising IDs and Emails based on the values of the Connection Settings.
Upload Frequency
The Pinterest Audience Integration uses Bulk Forwarding. Bulk Forwarding means that, instead of uploading updates to an audience in real time, mParticle compiles updates into a queue until either a given amount of time has passed since the last upload, or until a certain number of updates are waiting to be sent.
By default, mParticle uploads to Pinterest whenever at least one of the following conditions is met:
3 hours have passed since the last update.
At least 100000 messages are in the queue.
Upload frequency can sometimes be adjusted. Reach out to your mParticle Customer Success Manager if you need to discuss upload frequency.
Deleting an Audience
mParticle doesnât delete the downstream audience when you delete an audience in mParticle.
Connection Settings

URL: https://docs.mparticle.com/developers/apis/platform/overview/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Platform API Overview
The mParticle platform API allows you to RESTfully create and update a number of entities as well as configure services to forward data to.
Platform API resource groups
For a complete API reference for each set of Platform API resources, see the following:
Accounts
AppsIncludes app platforms and app services
Apps
Includes app platforms and app services
Audiences
Calculated attributes
Data points
Feeds
Field transformations
Services
Users
Workspaces
The rest of this page provides general usage guidelines applicable to all resources contained in the Platform API.
General Platform API usage
Base URL
The Platform API is located athttps://api.mparticle.com.
Prerequisites to accessing the API
To authenticate to the Platform API, use theAPI Credentials interfaceto create a Client ID and Secret, then use these credentials to fetch an OAuth access token.
Authentication
Once your API user is set up, you can authenticate by issuing a POST request to mParticleâs SSO token endpoint.
https://sso.auth.mparticle.com/oauth/token
The JSON body of the request must contain:
client_id- your Client ID, issued by mParticle
client_secret- your Client Secret, issued by mParticle
audience- set to a value of"https://api.mparticle.com"
grant_type- set to a value of"client_credentials"
Curl Syntax
Sample Raw HTTP Request
A successful POST request to the token endpoint will result in a JSON response as follows:
Subsequent requests to the API can now be authorized by setting the Authorization header as follows:
Authorization: Bearer YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-
Versioning
Once you have authenticated, the API resources can be accessed athttps://api.mparticle.com/v1/.
Subsequent updates to the API that introduce breaking changes will be published with a new version number in the URL.
Specifying your Account ID
Unless otherwise stated in the documentation for the specific resource group you are using, all API calls require you to pass in yourAccountIdas a querystring parameter. Forgetting to add the AccountId parameter when required will result in a 401 Unauthorized response.
All subsequent entities that you work with will be within the scope of the chosen account ID. Attempting to access or modify entities outside the specified Account ID scope will return 404 - Not Found.
Sending Data
Unless otherwise stated in the documentation for the specific resource group you are using, all POST/PUT requests should send JSON as the Request Payload, withContent-Typeset toapplication/json.
Return Data
Unless otherwise stated in the documentation for the specific resource group you are using, if an API request returns data, it will be wrapped in a common JSON structure.
One or more entities will be returned as an array in the data property. If errors were encountered, they will be available as an array of error objects.
Status Codes
The following table lists the status codes that are returned by API requests:
Cross Origin Resource Sharing
The mParticle REST API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin.
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/accounts/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Accounts
Get a single account
GET/accounts/1?accountId=1
Example cURL request
Response
Get all accounts
GET/accounts?accountId=1
Example cURL request
Response
Update an account
PUT/accounts/1?accountId=1
Example cURL request
Parameters
Errors
Create an account
POST/accounts
Example cURL request
Parameters
Delete an account
DELETE/accounts
Example cURL request
Errors
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/apps/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Apps
Get a single app
GET/apps/1?accountId=1
Example cURL request
Response
Get all apps
GET/apps?accountId=1
Example cURL request
Response
Update an app
PUT/apps/1?accountId=1
Example cURL request
Response
Request body parameters
Errors
Create an app
POST/apps?accountId=1
Example cURL request
Example HTTP Request
Response
Request body parameters
Errors
Creating a new app or app platform will generate a new Access Key and Secret for that app platform, which can be accessed through the âaccess_keysâ. Note that this is the only time the Secret is transmitted - subsequent GET requests will only return the Access Key.
Delete an app
DELETE/apps/1?accountId=1
Example cURL request
Errors
Get a single app platform
GET/apps/1/platforms/android?accountId=1
Example cURL request
Response
Get all app platforms
GET/apps/1/platforms?accountId=1
Example cURL request
Response
Update an app platform
PUT/apps/1/platforms/ios?accountId=1
Example cURL request
Request body parameters
Create an app platform
POSTapps/1/platforms?accountId=1
Example cURL request
Example HTTP request
Response
Request body parameters
Errors
Creating a new app or app platform will generate a new Access Key and Secret for that app platform, which can be accessed through the âaccess_keysâ.  Note that this is the only time the Secret is transmitted - subsequent GET requests will only return the Access Key.
Delete an app platform
DELETE/apps/1/platforms/ios?accountId=1
Example cURL request
Get all services for an app platform
GET/apps/1/platforms/ios/services?accountId=1
Example cURL request
Response
Configure a service for an app platform
PUT/apps/1/platforms/ios/services?accountId=1
Example cURL request
Example HTTP request
Request body parameters
Errors
To discover what settings are available for each service, you can callhttps://api.mparticle.com/v1/services?accountId=1to discover all services and supported settings.
The âaccountâ parameter allows you to forward data to more than one account per service. It is internal to mParticle, and can be set to any name of your choosing.
If omitted or set to null, the account name will be set to âDefault Accountâ.
The âisVisibleâ flag allows you to create services that forward data in the background, but are not visible in the mParticle UI. This allows you to have two active forwarders per combination of app platform and service. This field is not required and will default to true if omitted.
Custom Service Settings
Google Analytics Settings
Google Analytics has a few configuration settings which require additional details to be set.  These settings are listed below and are noted with a type ofCustomin the services call.:
customDimensions
customMetrics
Example
CheckGoogle Analyticsfor additional details on these settings and the limits on the supported custom dimensions and metrics.  The value for these settings is a json array containing objects withmaptype,mapandvalue.  You need to indicate if you are using an Event Attribute or a User Attribute, and then specify the mapping to the Custom Dimension or Custom Metric.
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/audiences/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Audiences
Get all audiences
GET/audiences?accountId=1
This request returns an array containing all active single and multiple workspace audiences for an account.  Details for each audience include:
name/external_name- The names for the audience shown within the mParticle dashboard and to external platforms.
id- the unique mParticle identifier for the audience.
is_calculated- true if boolean logic is used to build the audience.
connected_outputs- A list of each output platform the audience is currently connected to.
workspaces- A list of workspace objects that this audience is calculated from.
Example cURL request
Response
Get all audiences for a workspace
GET/workspace/1/audiences?accountId=1
This request returns an array containing all active single workspace audiences for an account.
Example cURL request
Response
Delete an audience
DELETE/audiences/<audience_id>?accountId=1
Deletes an audience. The Audience ID is a 4-digit number available as the"id"node in theGet All Audiences for an Accountresponse.
Example cURL request
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/calculated-attributes/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Calculated Attributes
A Calculated Attribute is a read-only value about a single user, providing granular insight into user behavior. These attributes are defined in mParticle and are computed automatically over time by using the raw data stream of events and user information.
The calculated attributes resource group is only accessible athttps://api.mparticle.com/platform/v2, and does not require the?accountIdquery string parameter.
Get all calculated attributes
GET/workspaces/1234/calculatedattributes?name=ca1
Example cURL request
Query parameters
Response
Check for existing calculated attributes
HEAD/workspaces/1234/calculatedattributes?name=ca1
Example cURL request
Parameters
Response
HTTP Code 204 â Calculated Attribute resource(s) exist.
HTTP Code 404 â Calculated Attribute resource(s) do not exist.
The response body will be empty.
Create a new calculated attribute
POST/workspaces/1234/calculatedattributes
Example cURL request
Request Payload Properties
Draft Definition Object Properties
draft_definition
count
first_occurrence_timestamp
last_occurrence_timestamp
first_occurrence
last_occurrence
sum
min
max
average
unique_list
unique_values_count
most_frequent
Data Point Object Properties
draft_definition.data_point
Condition Object Properties
draft_definition.conditions
Operator - Type Support Map
Time Period Object Properties
draft_definition.time_period
Seeding Object Properties
draft_definition.seeding
Response
The response will be an integer identifier for the new Calculated Attribute.
Get a calculated attribute
GET/workspaces/1234/calculatedattributes/5678
Example cURL request
Response
Delete a calculated attribute
DELETE/workspaces/1234/calculatedattributes/5678
Example cURL request
Response
HTTP Code 204 â Calculated Attribute was successfully deleted.
HTTP Code 404 â Calculated Attribute does not exist.
The response body will be empty.
Update a calculated attribute
Use this endpoint to create or update a draft of your Calculated Attribute definition. When a Calculated Attribute is updated, thedraft_definitionis changed. Once the Calculated Attribute is activated, thedraft_definitionis moved into theactive_definitionand the new definition is used to calculate values.  Theactive_definitionproperty cannot be updated directly.
You can only rename a Calculated Attribute before it has been activated; Once activated, thenameis read-only. The only property you will be allowed to update in this state is thedescription.
PUT/workspaces/1234/calculatedattributes/5678
Example cURL request
Response
HTTP Code 204 â Calculated Attribute was successfully updated.
HTTP Code 404 â Calculated Attribute does not exist.
Validation Error Responses
In addition to the validation errors fromCreate a Calculated Attribute.
Activate a calculated attribute
Use this endpoint to activate a calculated attribute. You must activate the Calculated Attribute before it can be used elsewhere in the system. A calculated attribute can only be activated if you have not exceeded the maximum limit of active calculated attributes for your account.
POST/workspaces/1234/calculatedattributes/5678/activation
The request body is empty for thisPOST.
Example cURL request
Response
HTTP Code 204 â Calculated Attribute was successfully activated.
Errors
Get a calculated attribute activation status
A calculated attributeâs activation status tells you whether the calculated attribute has been activated and when and who activated it.
GET/workspaces/1234/calculatedattributes/5678/activation
Example cURL request
Response
Delete a calculated attribute draft definition
Use this endpoint to discard a calculated attributeâs draft definition.
DELETE/workspaces/1234/calculatedattributes/5678/draft
Example cURL request
Response
HTTP Code 204 â Calculated Attributeâs draft definition was successfully deleted.
HTTP Code 404 â Calculated Attribute does not exist.
The response body will be empty.
Get a calculated attribute status
A calculated attributeâs calculation status gives you the calculation progress and an estimated completion date.
GET/workspaces/1234/calculatedattributes/5678/calculation
Example cURL request
Response
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/data-points/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Data Points
A DataPoint represents a unique data item that has been detected by our system. A DataPoint can be created by calling methods on our SDK such as logEvent, or they can be created using theEvents API.  Examples of DataPoints are Screen Views, Purchase Events, Navigation Events and Search events among others. All DataPoints are specific to a particular App.
Get data points for an app
GET/apps/1/datapoints
Retrieves a list of DataPoints that exist for an App. The 1 after /apps/ is a placeholder for the Application ID.
Example cURL request
Response
Supported Data Point Types
Supported DataPoint Event Types
If a DataPoint is of type âEventâ or âEventAttributeâ, then the EventType field will be populated
with one of the following values:
If a DataPoint is of typeCommerceorCommerceAttribute, then the EventType field will be populated
with one of the following values:
Create a data point
PUT /apps/1/datapoints
Adds a new DataPoint for an App.
Example cURL request
Example HTTP request
Request body parameters
Accepts an array of DataPoint objects, which have the following properties:
Supported DataPoint Types
The âtypeâ field can be set to one of the following values:
Supported Event Types
The âevent_typeâ field can be set to one of the following values. This field is only required when the âtypeâ is set to âEventâ or âEventAttributeâ.
You can add new DataPoints for an App using the API. DataPoints are automatically detected when data is received from your App, however it may be more convenient to insert this data using the API in advance, rather than waiting until your App is fully instrumented using the mParticle SDK. This will allow you to configure features such as Data Filtering without having to wait for App instrumentation to be completed.
Get a service filter
GET /apps/1/GoogleAnalyticsEventForwarder?accountId=1
Get default filtering behavior for a service.
Example cURL request
Response
This call shows any filtering configuration that exists at the Service level. Currently, this is just one property,"sendNewDataPointsByDefault", which controls whether newly detected DataPoints are sent to this Service by default.
Update a service filtering
PUT /apps/1/GoogleAnalyticsEventForwarder?accountId=1
Example cURL request
Example HTTP request
Parameters
Setting"sendNewDataPointsByDefault"to false will prevent newly detected DataPoints from being sent to the specified Service. Any existing DataPoints will not be affected, and will continue to be sent or filtered based on the existing configuration.
Get all data point filters
GET /apps/1/GoogleAnalyticsEventForwarder/datapoints?accountId=1
Retrieve a list of DataPoint filters for a specific App and Service.
Example cURL request
Response
Note that this list of DataPoints are filtered by types that are supported by the service.  If the service does not support the ScreenView DataPoint for example, then this DataPoint will not appear in the list.
The DataPoint types"EventAttribute","ScreenViewAttribute", and"CommerceAttribute"are child DataPoints that have a parent DataPoint. In these cases,"attribute_name"will contain the name of the attribute, and"name"will contain the name of the parent.
Update a data point filter
PUT /apps/1/GoogleAnalyticsEventForwarder/datapoints?accountId=1
Example cURL request
Response
Parameters
Accepts an array of DataPoint Filter objects, which have the following properties:
Supported DataPoint Filter Types
The"type"field can be set to one of the following values:
Supported User Identity Types
If the"type"is set to"UserIdentity", then the"name"field should be set to one of the following allowed values:
Supported Event Types
If the"type"is set to"Event"or"EventAttribute", the"event_type"field can be set to one of the following values. If"type"is set to"EventType", then the"name"field should be set to one of the values below:
If the"type"is set to"Commerce"or"CommerceAttribute", the"event_type"field can be set to one of the following values:
When configuring DataPoints of type"EventAttribute"or"ScreenViewAttribute"or"CommerceAttribute", you must include the name of the attribute in"attribute_name", and the name of the parent DataPoint in"name".
When configuring DataPoints of type"Event"or"EventAttribute", you must set the"event_type"field. Failure to do so will cause an error to occur. The"event_type"field is ignored for other types of DataPoints other than âEventâ and"EventAttribute".
If the DataPoint specified does not exist, it will be created automatically. Please note that to avoid creating duplicate DataPoints unintentionally,"type","name","attribute_name"and"event_type"should all be set correctly.
Due to the hierarchical nature of DataPoints, disabling some types of DataPoints will cause child DataPoints to also become disabled automatically. For example, turning off EventType"Navigation"will cause all Events and EventAttributes of that Event Type to become disabled. Turning off an Event will cause all child Event Attributes to become disabled.
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/feeds/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Feeds
Get all partner feeds for a workspace
GET /workspace/<workspaceId>/partnerfeeds?accountId=1
Returns a list of partner feeds set up for a workspace.
Example cURL request
Response
Get a specific feed
GET /partnerfeeds/<feed-id>?accountId=1
Get details and settings for a specific partner feed.
Example cURL request
Response
Create a new feed
POST /workspace/<workspace-id>/partnerfeeds?accountId=1
Creates a new feed.
Example cURL request
Response
Update a feed
PUT /workspace/<workspace-id>/partnerfeeds/<feed-id>?accountId=1
Updates an existing feed.
Example cURL request
Response
Get all output configurations
GET /workspace/<workspace-id>/<module_name>/serviceconfigurations?accountId=1
List all available configurations for a particular module
Example cURL request
Response
Create a new feed subscription
POST /partnerfeeds/<module-id>/subscriptions?accountId=1
Creates and configures a new feed subscription.
Example cURL request
Response
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/field-transformations/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Field Transformations
Use the Field Transformations API to create and manage one-to-one correlations, called mappings, between external data and fields in themParticle JSON schema.
Field transformations format and usage
Field transformations are JSON formatted schemas that contain one or more mappings between external source fields and internal mParticle destination fields. Field transformations are identified in the mParticle system by a unique stringIDand stringname.
Each field transformation includes an array calledmappings. This array contains a list of individual mapping objects that specify how external data should be mapped to internal mParticle fields.
Field transformation format
Field transformation properties
Mappings overview
Each object in themappingsarray is configured with the following properties:
Required whenmapping_typeisstatic. Templates are not supported.
Optional whenmapping_typeiscolumn. Templates are optional.
Mapping type settings
The supported values formapping_typeare:
Following are descriptions and examples for each type:
column
static
ignore
column
Setmapping_typetocolumnto map the values stored in a column in a data table to an mParticle field:
You can use thecolumnmapping type to map nested fields within an object in your source data to a destination in mParticle. For example, imagine the following source data stored in a column named"foo":
You could select the nested field"item"using:
This would result in the following output:
You can ignore individual fields when they are empty or null using theignore_whensetting forcolumnmappings:
Ignore when empty:
Ignore when null:
static
Setmapping_typetostaticto map the value ofvalueto an mParticle field:
ignore
Setmapping_typetoignoreto ignore the data listed insource:
array
To map multiple fields to a single array in mParticle, create a separate mapping for each field.
Within each mapping:
Setmapping_typetocolumnorstatic
Setsourceto the name of the field or column in your source data. You may use*as a wildcard selector for field names that share a common prefix.
Setdestinationto the name of the destination array in mParticle that you want to map to, including square brackets[]. For example:myArray[]
Setvalueto either a static value if you used thestaticmapping type or a template if you want to modify the output of your mapping.
Consider the following table of source data where each column name shares the prefixfavorite_store_:
We can use the wildcard selector*to map each column to an array in mParticle calledfavorite_stores[]:
Consider the following table of source data where each column has a unique name:
To map each of these columns to the arrayfavorite_stores[], we create a separate mapping for each element:
Unmapped data
You can create a âdefaultâ mapping that will be used for any source data that is not already mapped or ignored by settingsourceto the reserved keyword$unmapped:
By creating an âunmappedâ mapping you can decrease the chances of a warehouse sync pipeline dropping or missing data during ingest.
Simplified JSON path format
ThemParticle JSON schemadefines the structure that must be applied to all event data and user data for it to be ingested and usable by mParticle products.
At the highest level, the mParticle JSON schema contains aneventsarray which represents an event batch. Each object in theeventsbatch represents a single event, and it includes the event data stored in an object calleddataand the type of event that was logged, or theevent_type. The specific event details are then stored in a series of nested JSON objects.
The Field Transformations API uses a simplified path format when mapping external data with individual fields contained in the mParticle JSON schema:
Top level elements are referred to by their field names:For example, to referenceain{"a": 123}, usea
Top level elements are referred to by their field names:
For example, to referenceain{"a": 123}, usea
Nested elements are seperated by.:For example, to referencebin{"a": {"b": 123}}usea.b
Nested elements are seperated by.:
For example, to referencebin{"a": {"b": 123}}usea.b
Fields of objects in nested in arrays are referenced using array indices:For example, to referencebin{"a": [{"b": 123}]}usea[].b
Fields of objects in nested in arrays are referenced using array indices:
For example, to referencebin{"a": [{"b": 123}]}usea[].b
Templating
mParticle supports the use of Liquid templates with field transformations to enable more flexible and dynamic mappings between your source data and mParticle fields.
Liquid templates can used when setting thevalueanddestinationfields of a mapping simply by adding the curly brace delimiters{{ }}surrounding your template object, or variable, and filters. For example:
You can use filters to modify the output of a template by adding a pipe character|before the filter:
You can string multiple filters together, separating each filter with a new pipe character:
You can also use the source field name in templates. For example, you can use a template to trim text from a source field name with:
Supported template variables
mParticle supports the following variables for use in templates:
value: equals value of a field as found in your source database
key: equals the name of the column or property containing the value in your source database
key_length: equals the number of characters inkey
Template example
For example, consider the following source data:
We could map each favorite store to an array in mParticle calledfavorite_storeswith the mapping:
Note that this mapping makes use of the wildcard selector*forsourceto select every column name in our source data table that begins with"favorite_store_".
The resulting output of this mapping would be:
However, we can modify the output by setting a template with theupcasefilter to the value of thevaluefield in our mapping:
The resulting output of this mapping would then be:
You can use templates when setting thedestinationof a mapping.
Consider the following example source data:
To map each column to the correct user identity in mParticle, we can use the variablekeywith theremovefilter in a template withuser_identities:
The resulting output of this mapping would be:
Supported filters
Filters can be used in your template to modify the source data you want to map to an mParticle field. To learn more about a specific filter, refer toFiltersin the Liquid documentation.
mParticle supports the following filters for use in templates:
abs
append
at_least
at_most
capitalize
ceil
compact
concat
date
default
divided_by
downcase
first
floor
join
last
lstrip
map
minus
modulo
plus
prepend
remove
remove_first
remove_last
replace
replace_first
replace_last
reverse
round
rstrip
size
slice
sort
sort_natural
split
strip
strip_newlines
sum
times
truncate
truncatewords
uniq
upcase
where
Wildcard
The asterisk*character can be used as a wildcard when selecting both your source fields and destinations in a mapping.
For example, consider the following data:
Settingsourcein a mapping for this data tofavorite_store_*will select all three columns, since they each share the same prefixfavorite_store_.
The wildcard selector can also function as a shorthand for the more verbose template{{ key }}when setting the destination. For example, the following mapping will map each store in the source data to a separate field of the same name within theuser_attributesobject in mParticleâs JSON schema:
Example mapping:
Example output:
Wildcards are also supported when selecting fields nested within an object as your source. For example:
Example source data:
Example mapping:
Example output:
Example field transformation
Consider the following simplified example source data table and destination schema:
Example source database table
Example destination JSON schema
A field transformation mapping each attribute in the database table to the attributes as they exist in the mParticle JSON schema would be:
Example field transformation
Authentication
The Field Transformations API can be authenticated with a bearer token.
Authenticate with a bearer token
To create a bearer token, send a POST request to mParticleâs SSO token endpoint athttps://sso.auth.mparticle.com/oauth/token.
The JSON body of the request must contain:
client_id- the client ID, issued by mParticle when creating the API credentials
client_secret- the client secret, issued by mParticle when creating the API credentials
audience- set to a value of"https://api.mparticle.com"
grant_type- set to a value of"client_credentials"
Example cURL request
Example HTTP request
A successful POST request to the token endpoint results in a JSON response as follows:
Subsequent requests to the API can then be authorized by setting the authorization header to:
Authorization: Bearer YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-
Tokens cannot be revoked, but they expire every eight hours. The initial token request can take between one and three seconds, so mParticle recommends that you cache the token and refresh it only when necessary.
Get all field transformations
GEThttps://api.mparticle.com/platform/v2/workspaces/{workspaceId}/transformations/fields
Path parameters
Query parameters
Example cURL request
Example JSON request body
No request body.
Response
A successful request receives a200response with an array containing each field transformation within a JSON object.
Create a new field transformation
POSThttps://api.mparticle.com/platform/v2/workspaces/{workspaceId}/transformations/fields
Example cURL request
Example JSON request body
Response
A successful request receives a200response with a JSON object containing the field transformation you just created.
Get a specific field transformation
GEThttps://api.mparticle.com/platform/v2/workspaces/{workspaceId}/transformations/fields/{fieldTransformationId}
Path parameters
Example cURL request
Example JSON request body
No request body.
Response
A successful request receives a200response with a JSON object containing the field transformation.
Update a field transformation
PUThttps://api.mparticle.com/platform/v2/workspaces/{workspaceId}/transformations/fields/{fieldTransformationId}
Path parameters
Example cURL request
Example JSON request body
Response
A successful request receives a200response with a JSON object containing the updated field transformation.
Delete a field transformation
DELETEhttps://api.mparticle.com/platform/v2/workspaces/{workspaceId}/transformations/fields/{fieldTransformationId}
Path parameters
Example cURL request
Example JSON request body
No request body.
Response
A successful request receives a204response with an empty body.
Error handling
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/services/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Services
When getting service information, both configuration and connection settings are returned.  Refer to theCustom Service Settingsfor specifying these settings.
Get all services for an account
GET /services?accountId=1
Example cURL request
Response
Get a specific service with settings
GET /services/Indicative?accountId=1
Example cURL request
Response
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/users/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Users
Get all users
GET /users?accountId=1
Example cURL request
Response
Get a specific user
GET /users/test40mparticle2Ecom?accountId=1
Example cURL request
Response
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/platform/workspaces/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Workspaces
Get all workspaces for an account
GET /workspace?accountId=1
Returns a list of all workspaces for an account.
Example cURL request
Response
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/dsr-api/v2/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Data Subject Request API Version 1 and 2
Introduction
This is reference documentation for mParticleâs API for receiving and managing data subject requests (DSRs) for GDPR and CCPA compliance.  To learn more about what this API is used for, see ourData Subject Requests Guide.
This API is our instance of theOpenDSR framework, formerly known as OpenGDPR.
See theDefault Service Limitsfor information about API rate limits.
Versions
There are two versions of this API that we support:
This is noted in the two endpoints supported below, and in theapi_versionfield in many of the resources below.
Changes in Version 2.0
Version 2.0 made the following changes:
Addition of a required field calledregulationwith values ofccpaorgdpr
Updated path for request objects from/opengdpr_requeststo/requests
Updated version field default to2.0
Updated API endpoints for version 2 (below)
Updated subdomain to match the new framework nameopengdpr->opendsr
Updated security certificate for new subdomain
Updated headers to match new framework name (see below)
If you are live on version 1,you do not needto upgrade to version 2, unless you want some of the changes noted above. Version 1 can be used for both GDPR and CCPA, though the requests are not explicitly marked as such. Version 1 will not be deprecated.
Base URL
The current (v2) mParticle OpenDSR endpoint is available at:
We also support our prior version (v1), called OpenGDPR, at:
Authentication
The HTTP APIs are secured via basic authentication. Credentials are issued at the level of an mParticle Workspace. You can obtain credentials for your Workspace from the Workspace Settings screen. Note that this authentication is for a single workspace and scopes the DSR to this workspace only.
To view workspace credentials:
Click on the current workspace name in the upper left corner.
ClickSettings.
Click on the name of a workspace to display the Edit Workspace settings page.
You can authenticate in 2 ways:
Many HTTP clients support basic authentication out of the box. Use your API key for the âusernameâ and your API secret for âpasswordâ.
Manually set theauthenticationheader by encoding your key and secret together:2.1 Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret2.2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==2.3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==2.4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
Manually set theauthenticationheader by encoding your key and secret together:
2.1 Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret
2.2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
2.3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
2.4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
Resources
The primary resource is therequestobject:
Submit a Data Subject Request (DSR)
A request in the OpenDSR format communicates a Data Subjectâs wish to access or erase their data. The OpenDSR Request takes a JSON request body and requires aContent-Type: application/jsonheader:
Thesubject_identitiesobject
This object encapsulates the identities for this data subject request. For each identity included in an OpenDSR request, three fields are required.
Supported Identity Types
While the OpenDSR framework allows for hashed IDs, and requires anidentity_formatfield, mParticle only supports sendingrawIDs.
Example Success Response Body
Get the status of an OpenDSR request
GET /requests/{RequestID}
Example Response Body
Get the status of all OpenDSR requests in a Group
GET /requests?group_id={my-group}
Example Response Body
The response is a collection of DSR subject requests tha match the group_id.
Cancel a request
DELETE /requests/{RequestID}
Cancels a request. This can only be done if the status of the request ispending.
Example Response Body
Discovery
GET /discovery/
The discovery endpoint allows you to programmatically check the request types and identity types supported by an OpenDSR provider.
Example Response Body
In v1, the certificate is available at:https://static.mparticle.com/gdpr/opengdpr_cert.pem
In v2, the certificate is available at:https://static.mparticle.com/dsr/opendsr_cert.pem
Callbacks
When a request changes status - including when a request is first created - mParticle sends a callback POST to all URLs specified in thestatus_callback_urlsarray of the request. Callbacks are not sent in realtime but are queued and sent every 15 minutes.
Callback requests are signed and issued over TLS. You must validate the authenticity of the request before parsing the request body.
Validating a callback request
Establish a whitelist of all processor domains that you will allow to issue callbacks.
If theX-OpenDSR-Processor-Domainheader value is in your whitelist, fetch the certificate. The certificate URL is available as the value of"processor_certificate"in the/discoveryresponse body. The certificate can be cached for the lifetime of the certificate.
Validate the certificate. This should be handled by a library. Certificate validation should confirm that:The certificate was issued by a trusted authority.The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.The certificate has not expired.
Validate the certificate. This should be handled by a library. Certificate validation should confirm that:
The certificate was issued by a trusted authority.
The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.
The certificate has not expired.
If the certificate is valid, use it to validate theX-OpenDSR-Signatureheader against the raw request body. mParticle uses SHA256 RSA as a signing algorithm.
Return a response with a202 Acceptedstatus header if all validations are successful. Return a response with a401 Unauthorizedstatus header if the signature fails to validate or the processor domain is not in your whitelist.
In version 1, these headers are:
X-OpenGDPR-Processor-Domain
X-OpenGDPR-Signature
Example callback request
Errors
The following errors may be returned by the API with additional details as shown.
Was this page helpful?

URL: https://docs.mparticle.com/developers/apis/dsr-api/v3/
Documentation
Developers
Platform API Overview
Accounts
Apps
Audiences
Calculated Attributes
Data Points
Feeds
Field Transformations
Services
Users
Workspaces
Data Subject Request API Version 1 and 2
Data Subject Request API Version 3
Warehouse Sync API Overview
Warehouse Sync API Tutorial
Warehouse Sync API Reference
Data Mapping
Warehouse Sync SQL Reference
Warehouse Sync Troubleshooting Guide
ComposeID
Warehouse Sync API v2 Migration
Calculated Attributes Seeding API
Bulk Profile Deletion API Reference
Custom Access Roles API
Data Planning API
Group Identity API Reference
Pixel Service
Profile API
Events API
mParticle JSON Schema Reference
IDSync
AMP SDK
Initialization
Configuration
Network Security Configuration
Event Tracking
User Attributes
IDSync
Screen Events
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
WebView Integration
Logger
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting the Android SDK
API Reference
Upgrade to Version 5
Cordova Plugin
Identity
Direct URL Routing FAQ
Web
Android
iOS
Getting Started
Usage
API Reference
Initialization
Configuration
Event Tracking
User Attributes
IDSync
Screen Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Push Notifications
Webview Integration
Upload Frequency
App Extensions
Preventing Blocked HTTP Traffic with CNAME
Linting Data Plans
Troubleshooting iOS SDK
Social Networks
iOS 14 Guide
iOS 15 FAQ
iOS 16 FAQ
iOS 17 FAQ
iOS 18 FAQ
API Reference
Upgrade to Version 7
Getting Started
Identity
Media
Getting Started
Identity
Upload Frequency
Getting Started
Opt Out
Initialize the SDK
Event Tracking
Commerce Tracking
Error Tracking
Screen Tracking
Identity
Location Tracking
Session Management
Getting Started
Identity
Initialization
Configuration
Content Security Policy
Event Tracking
User Attributes
IDSync
Page View Tracking
Commerce Events
Location Tracking
Media
Kits
Application State and Session Management
Data Privacy Controls
Error Tracking
Opt Out
Custom Logger
Persistence
Native Web Views
Self-Hosting
Multiple Instances
Web SDK via Google Tag Manager
Preventing Blocked HTTP Traffic with CNAME
Facebook Instant Articles
Troubleshooting the Web SDK
Browser Compatibility
Linting Data Plans
API Reference
Upgrade to Version 2 of the SDK
Getting Started
Identity
Web
Alexa
Android
iOS
Web
mParticle Command Line Interface
Linting Tools
Smartype
Node SDK
Go SDK
Python SDK
Ruby SDK
Java SDK
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 9. Test your local app
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Step 1. Create an input
Step 2. Create an output
Step 3. Verify output
Overview
Step 1. Create an input
Step 2. Verify your input
Step 3. Set up your output
Step 4. Create a connection
Step 5. Verify your connection
Step 6. Track events
Step 7. Track user data
Step 8. Create a data plan
Introduction
Outbound Integrations
Firehose Java SDK
Inbound Integrations
Overview
Android Kit Integration
JavaScript Kit Integration
iOS Kit Integration
Compose ID
Data Hosting Locations
Glossary
Migrate from Segment to mParticle
Migrate from Segment to Client-side mParticle
Migrate from Segment to Server-side mParticle
Segment-to-mParticle Migration Reference
Rules Developer Guide
API Credential Management
The Developer's Guided Journey to mParticle
Guides
Create an Input
Start capturing data
Connect an Event Output
Create an Audience
Connect an Audience Output
Transform and Enhance Your Data
Introduction
Profiles
Audiences Overview
Create an Audience
Connect an Audience
Manage Audiences
Real-time Audiences (Legacy)
Standard Audiences (Legacy)
Calculated Attributes Overview
Using Calculated Attributes
Create with AI Assistance
Calculated Attributes Reference
Predictive Audiences Overview
Using Predictive Audiences
Journeys Overview
Manage Journeys
Download an audience from a journey
Audience A/B testing from a journey
Journeys 2.0
What are predictive attributes?
Create Future Prediction
Use Future Predictions in Campaigns
Assess and Troubleshoot Predictions
Next Best Action Overview
Create a Next Best Action (NBA)
View and Manage NBAs
Activate Next Best Actions in Campaigns
Usage and Billing Report
The new mParticle Experience
The Overview Map
Observability Overview
Observability User Guide
Observability Troubleshooting Examples
Observability Span Glossary
Introduction
Data Retention
Connections
Activity
Live Stream
Data Filter
Rules
Tiered Events
mParticle Users and Roles
Analytics Free Trial
Troubleshooting mParticle
Usage metering for value-based pricing (VBP)
Introduction
Sync and Activate Analytics User Segments in mParticle
User Segment Activation
Welcome Page Announcements
Project Settings
Roles and Teammates
Organization Settings
Global Project Filters
Portfolio Analytics
Analytics Data Manager Overview
Events
Event Properties
User Properties
Revenue Mapping
Export Data
UTM Guide
Data Dictionary
Query Builder Overview
Modify Filters With And/Or Clauses
Query-time Sampling
Query Notes
Filter Where Clauses
Event vs. User Properties
Group By Clauses
Annotations
Cross-tool Compatibility
Apply All for Filter Where Clauses
Date Range and Time Settings Overview
User Attributes at Event Time
Understanding the Screen View Event
Analyses Introduction
Getting Started
Visualization Options
For Clauses
Date Range and Time Settings
Calculator
Numerical Settings
Assisted Analysis
Properties Explorer
Frequency in Segmentation
Trends in Segmentation
Did [not] Perform Clauses
Cumulative vs. Non-Cumulative Analysis in Segmentation
Total Count of vs. Users Who Performed
Save Your Segmentation Analysis
Export Results in Segmentation
Explore Users from Segmentation
Getting Started with Funnels
Group By Settings
Conversion Window
Tracking Properties
Date Range and Time Settings
Visualization Options
Interpreting a Funnel Analysis
Group By
Filters
Conversion over Time
Conversion Order
Trends
Funnel Direction
Multi-path Funnels
Analyze as Cohort from Funnel
Save a Funnel Analysis
Explore Users from a Funnel
Export Results from a Funnel
Getting Started with Cohorts
Analysis Modes
Save a Cohort Analysis
Export Results
Explore Users
Saved Analyses
Manage Analyses in Dashboards
Getting Started
Event Menu
Visualization
Ending Event
Save a Journey Analysis
Getting Started
User Activity Timelines
Time Settings
Export Results
Save A User Analysis
DashboardsââGetting Started
Manage Dashboards
Dashboard Filters
Organize Dashboards
Scheduled Reports
Favorites
Time and Interval Settings in Dashboards
Query Notes in Dashboards
User Aliasing
The Demo Environment
Keyboard Shortcuts
Analytics for Marketers
Analytics for Product Managers
Compare Conversion Across Acquisition Sources
Analyze Product Feature Usage
Identify Points of User Friction
Time-based Subscription Analysis
Dashboard Tips and Tricks
Understand Product Stickiness
Optimize User Flow with A/B Testing
User Segments
User Segments Export API
Dashboard Filter API
IDSync Overview
Use Cases for IDSync
Components of IDSync
Store and Organize User Data
Identify Users
Default IDSync Configuration
Profile Conversion Strategy
Profile Link Strategy
Profile Isolation Strategy
Best Match Strategy
Aliasing
Overview
Create and Manage Group Definitions
Introduction
Catalog
Live Stream
Data Plans
Blocked Data Backfill Guide
Warehouse Sync
Data Privacy Controls
Data Subject Requests
Default Service Limits
Feeds
Cross-Account Audience Sharing
Approved Sub-Processors
Import Data with CSV Files
CSV File Reference
Glossary
Video Index
Single Sign-On (SSO)
Setup Examples
Debug Console
Data Warehouse Delay Alerting
Introduction
Introduction
Introduction
Rudderstack
Google Tag Manager
Segment
Advanced Data Warehouse Settings
AWS Kinesis (Snowplow)
AWS Redshift (Define Your Own Schema)
AWS S3 Integration (Define Your Own Schema)
AWS S3 (Snowplow Schema)
BigQuery (Snowplow Schema)
BigQuery Firebase Schema
BigQuery (Define Your Own Schema)
GCP BigQuery Export
Snowflake (Snowplow Schema)
Snowplow Schema Overview
Snowflake (Define Your Own Schema)
REST API
Dashboard Filter API (Deprecated)
User Segments Export API (Deprecated)
SDKs Introduction
React Native
iOS
Android
Java
JavaScript
Python
Object API
Aliasing
Data Subject Request API Version 3
Use the Data Subject Request API version 3 (v3) to receive and manage data subject requests (DSRs) for GDPR and CCPA compliance, and to forward data subject requests of type erasure. To learn more, seeData Subject Requests Guide.
This API is our instance of theOpenDSR framework, formerly known as OpenGDPR.
See theDefault Service Limitsfor information about API rate limits.
Changes in v3
v3 contains the following changes:
Thesubject_identitiesare sent as a dictionary where the keys are identity types which enforces a single identity per identity type.
Additional identities can be provided in the opendsr.mparticle.com extensions.  The MPIDs and identities collections were merged into a singlesubject_identitiesdictionary with the same format as thesubject_identitiesin the request.
If an identity ofmpidis included in the extensions, no other identities can be provided in the request.
Updated the version field default to 3.0
Updated API endpoints for v3 (below)
This update enforces identity resolution to map to a singlempid, and enables forwarding of DSR requests of type erasure.
You must upgrade to version 3 in order to forward DSR requests of type erasure.
Upgrade Guide
Follow the steps below to upgrade from version 1 or version 2 to version 3.
Update to the v3 base URLhttps://opendsr.mparticle.com/v3.
Update theapi_versionto 3.0.
Update the format in thesubject_identitieselement as describedbelow.
Change the format of theopendsr.mparticle.comextensions as describedbelow.
If you includempidin theopendsr.mparticle.comextensions, you must not include any other identities.
Endpoint
The current (v3) mParticle OpenDSR base URL:
Authentication
The HTTP APIs are secured via basic authentication. Credentials are issued at the level of an mParticle Workspace. You can obtain credentials for your Workspace from the Workspace Settings screen. Note that this authentication is for a single workspace and scopes the DSR to this workspace only.
To workspace view credentials:
Click on the current workspace name in the upper left corner.
ClickSettings.
Click on the name of a workspace to display the Edit Workspace settings page.
You can authenticate in two ways:
Many HTTP clients support basic authentication. Use your API key for the username and your API secret for the password.
Manually set theauthenticationheader by encoding your key and secret together:Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
Manually set theauthenticationheader by encoding your key and secret together:
Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret
2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==
Resources
The primary resource is therequestobject:
Submit a Data Subject Request (DSR)
A request in the OpenDSR format communicates a Data Subjectâs wish to access or erase their data. The OpenDSR Request takes a JSON request body and requires aContent-Type: application/jsonheader:
Thesubject_identitiesObject
Thesubject_identitiesare sent as a dictionary where the keys are identity types, and the value fields arevalueandencoding. You can specify up to 50 identities in a single request. The number of identities in a request is also limited by the number of different unique identity types.
Supported Identity Types
Data subject requests using the OpenDSR format may include an object calledsubject_identities. If you use this object, you must specify:
identity_type: A string representing the type of identifier used (such asemailorandroid_advertising_id)
value: A string representing the value of the identifier (such asexample@example.com)
encoding: a string representing how the identifier is encoded
When setting theidentity_typein thesubject_identitiesobject of an OpenDSR request, make sure to use values from the column labeledSupported OpenDSR Formatin the table below. The column labeledmParticle Identity Typeindicates the corresponding types used in mParticle.
The identities supported in thesubject_identitieselement in theopendsr.mparticle.comextension are:
mpid
other
other2
other3
other4
other5
other6
other7
other8
other9
other10
mobile_number
phone_number_2
phone_number_3
Example Success Response Body
Get the status of an OpenDSR request
GET /requests/{RequestID}
Example Response Body
Extensions
Theextensionselement is a collection of information on the current state of sending the forwarding request per partner.  The fields are:
Thestatusfield returns the current status of the forwarding request to the partner:
Get the status of all OpenDSR requests in a Group
GET /requests?group_id={my-group}
Example Response Body
The response is a collection of DSR subject requests that match thegroup_id.
Cancel a Request
DELETE /requests/{RequestID}
Cancels a request. This can only be done if the status of the request ispending.  The request is canceled in mParticle, but does not cancel theerasurerequests to any enabled output.
Example Response Body
Discovery
GET /discovery/
The discovery endpoint allows you to programmatically check the request types and identity types supported by an OpenDSR provider.
Example Response Body
Callbacks
When a request changes status, including when a request is first created, mParticle sends a callback POST to all URLs specified in thestatus_callback_urlsarray of the request. Callbacks are queued and sent every 15 minutes.
Callback requests are signed and issued over TLS. You must validate the authenticity of the request before parsing the request body.
Validating a Callback Request
Establish a whitelist of all processor domains that you will allow to issue callbacks.
If theX-OpenDSR-Processor-Domainheader value is in your whitelist, fetch the certificate. The certificate URL is available as the value of"processor_certificate"in the/discoveryresponse body. The certificate can be cached for the lifetime of the certificate.
Validate the certificate. This should be handled by a library. Certificate validation should confirm that:The certificate was issued by a trusted authority.The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.The certificate has not expired.
Validate the certificate. This should be handled by a library. Certificate validation should confirm that:
The certificate was issued by a trusted authority.
The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.
The certificate has not expired.
If the certificate is valid, use it to validate theX-OpenDSR-Signatureheader against the raw request body. mParticle uses SHA256 RSA as a signing algorithm.
Return a response with a202 Acceptedstatus header if all validations are successful. Return a response with a401 Unauthorizedstatus header if the signature fails to validate or the processor domain is not in your whitelist.
Example Callback Request
Errors
The following errors may be returned by the API.
Was this page helpful?